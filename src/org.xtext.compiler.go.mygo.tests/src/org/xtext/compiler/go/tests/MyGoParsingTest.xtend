/*
 * generated by Xtext 2.14.0
 */
package org.xtext.compiler.go.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.XtextRunner
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.Assert
import org.junit.Test
import org.junit.runner.RunWith
import org.xtext.compiler.go.myGo.Model

@RunWith(XtextRunner)
@InjectWith(MyGoInjectorProvider)
class MyGoParsingTest {
	@Inject
	ParseHelper<Model> parseHelper
	
	@Test
	def void loadModel() {
		val result = parseHelper.parse('''
			Hello abc!
		''')
		//println(result.eContents.get(0))
		//Assert.assertNotNull(result)
		//val errors = result.eResource.errors
		//Assert.assertTrue('''Unexpected errors: «errors.join(", ")»''', errors.isEmpty)
		println(result)
	}
	
	// TODO: how to test literals?
	@Test
	def void integerLiteralsTest() {
		val result = parseHelper.parse('''
			42
			0600
			0xBadFace
			170141183460469231731687303715884105727
		''')
		Assert.assertNotNull(result)
		val errors = result.eResource.errors
		Assert.assertTrue('''Unexpected errors: «errors.join(", ")»''', errors.isEmpty)
	}
	
}
