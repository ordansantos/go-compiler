/*
 * generated by Xtext 2.14.0
 */
grammar InternalMyGo;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.compiler.go.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.compiler.go.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.compiler.go.services.MyGoGrammarAccess;

}
@parser::members {
	private MyGoGrammarAccess grammarAccess;

	public void setGrammarAccess(MyGoGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclarations
entryRuleDeclarations
:
{ before(grammarAccess.getDeclarationsRule()); }
	 ruleDeclarations
{ after(grammarAccess.getDeclarationsRule()); } 
	 EOF 
;

// Rule Declarations
ruleDeclarations 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclarationsAccess().getAlternatives()); }
		(rule__Declarations__Alternatives)
		{ after(grammarAccess.getDeclarationsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePackage
entryRulePackage
:
{ before(grammarAccess.getPackageRule()); }
	 rulePackage
{ after(grammarAccess.getPackageRule()); } 
	 EOF 
;

// Rule Package
rulePackage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageAccess().getGroup()); }
		(rule__Package__Group__0)
		{ after(grammarAccess.getPackageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImports
entryRuleImports
:
{ before(grammarAccess.getImportsRule()); }
	 ruleImports
{ after(grammarAccess.getImportsRule()); } 
	 EOF 
;

// Rule Imports
ruleImports 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportsAccess().getGroup()); }
		(rule__Imports__Group__0)*
		{ after(grammarAccess.getImportsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionDeclaration
entryRuleFunctionDeclaration
:
{ before(grammarAccess.getFunctionDeclarationRule()); }
	 ruleFunctionDeclaration
{ after(grammarAccess.getFunctionDeclarationRule()); } 
	 EOF 
;

// Rule FunctionDeclaration
ruleFunctionDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionDeclarationAccess().getGroup()); }
		(rule__FunctionDeclaration__Group__0)
		{ after(grammarAccess.getFunctionDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReceiver
entryRuleReceiver
:
{ before(grammarAccess.getReceiverRule()); }
	 ruleReceiver
{ after(grammarAccess.getReceiverRule()); } 
	 EOF 
;

// Rule Receiver
ruleReceiver 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReceiverAccess().getGroup()); }
		(rule__Receiver__Group__0)
		{ after(grammarAccess.getReceiverAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBody
entryRuleBody
:
{ before(grammarAccess.getBodyRule()); }
	 ruleBody
{ after(grammarAccess.getBodyRule()); } 
	 EOF 
;

// Rule Body
ruleBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBodyAccess().getGroup()); }
		(rule__Body__Group__0)
		{ after(grammarAccess.getBodyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLineCommand
entryRuleLineCommand
:
{ before(grammarAccess.getLineCommandRule()); }
	 ruleLineCommand
{ after(grammarAccess.getLineCommandRule()); } 
	 EOF 
;

// Rule LineCommand
ruleLineCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLineCommandAccess().getAlternatives()); }
		(rule__LineCommand__Alternatives)
		{ after(grammarAccess.getLineCommandAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignment
entryRuleAssignment
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignmentAccess().getGroup()); }
		(rule__Assignment__Group__0)
		{ after(grammarAccess.getAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForRange
entryRuleForRange
:
{ before(grammarAccess.getForRangeRule()); }
	 ruleForRange
{ after(grammarAccess.getForRangeRule()); } 
	 EOF 
;

// Rule ForRange
ruleForRange 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForRangeAccess().getAlternatives()); }
		(rule__ForRange__Alternatives)
		{ after(grammarAccess.getForRangeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParametersDeclaration
entryRuleParametersDeclaration
:
{ before(grammarAccess.getParametersDeclarationRule()); }
	 ruleParametersDeclaration
{ after(grammarAccess.getParametersDeclarationRule()); } 
	 EOF 
;

// Rule ParametersDeclaration
ruleParametersDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParametersDeclarationAccess().getGroup()); }
		(rule__ParametersDeclaration__Group__0)
		{ after(grammarAccess.getParametersDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParametersValues
entryRuleParametersValues
:
{ before(grammarAccess.getParametersValuesRule()); }
	 ruleParametersValues
{ after(grammarAccess.getParametersValuesRule()); } 
	 EOF 
;

// Rule ParametersValues
ruleParametersValues 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParametersValuesAccess().getGroup()); }
		(rule__ParametersValues__Group__0)
		{ after(grammarAccess.getParametersValuesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeDeclaration
entryRuleTypeDeclaration
:
{ before(grammarAccess.getTypeDeclarationRule()); }
	 ruleTypeDeclaration
{ after(grammarAccess.getTypeDeclarationRule()); } 
	 EOF 
;

// Rule TypeDeclaration
ruleTypeDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeDeclarationAccess().getGroup()); }
		(rule__TypeDeclaration__Group__0)
		{ after(grammarAccess.getTypeDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValue
entryRuleValue
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueAccess().getAlternatives()); }
		(rule__Value__Alternatives)
		{ after(grammarAccess.getValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntValue
entryRuleIntValue
:
{ before(grammarAccess.getIntValueRule()); }
	 ruleIntValue
{ after(grammarAccess.getIntValueRule()); } 
	 EOF 
;

// Rule IntValue
ruleIntValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntValueAccess().getINTTerminalRuleCall()); }
		RULE_INT
		{ after(grammarAccess.getIntValueAccess().getINTTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFloatValue
entryRuleFloatValue
:
{ before(grammarAccess.getFloatValueRule()); }
	 ruleFloatValue
{ after(grammarAccess.getFloatValueRule()); } 
	 EOF 
;

// Rule FloatValue
ruleFloatValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFloatValueAccess().getGroup()); }
		(rule__FloatValue__Group__0)
		{ after(grammarAccess.getFloatValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringValue
entryRuleStringValue
:
{ before(grammarAccess.getStringValueRule()); }
	 ruleStringValue
{ after(grammarAccess.getStringValueRule()); } 
	 EOF 
;

// Rule StringValue
ruleStringValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringValueAccess().getSTRINGTerminalRuleCall()); }
		RULE_STRING
		{ after(grammarAccess.getStringValueAccess().getSTRINGTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBoolValue
entryRuleBoolValue
:
{ before(grammarAccess.getBoolValueRule()); }
	 ruleBoolValue
{ after(grammarAccess.getBoolValueRule()); } 
	 EOF 
;

// Rule BoolValue
ruleBoolValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoolValueAccess().getAlternatives()); }
		(rule__BoolValue__Alternatives)
		{ after(grammarAccess.getBoolValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIdType
entryRuleIdType
:
{ before(grammarAccess.getIdTypeRule()); }
	 ruleIdType
{ after(grammarAccess.getIdTypeRule()); } 
	 EOF 
;

// Rule IdType
ruleIdType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdTypeAccess().getGroup()); }
		(rule__IdType__Group__0)
		{ after(grammarAccess.getIdTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFuncCall
entryRuleFuncCall
:
{ before(grammarAccess.getFuncCallRule()); }
	 ruleFuncCall
{ after(grammarAccess.getFuncCallRule()); } 
	 EOF 
;

// Rule FuncCall
ruleFuncCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFuncCallAccess().getGroup()); }
		(rule__FuncCall__Group__0)
		{ after(grammarAccess.getFuncCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReceiverInstance
entryRuleReceiverInstance
:
{ before(grammarAccess.getReceiverInstanceRule()); }
	 ruleReceiverInstance
{ after(grammarAccess.getReceiverInstanceRule()); } 
	 EOF 
;

// Rule ReceiverInstance
ruleReceiverInstance 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReceiverInstanceAccess().getGroup()); }
		(rule__ReceiverInstance__Group__0)
		{ after(grammarAccess.getReceiverInstanceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getGroup()); }
		(rule__Expression__Group__0)
		{ after(grammarAccess.getExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression2
entryRuleExpression2
:
{ before(grammarAccess.getExpression2Rule()); }
	 ruleExpression2
{ after(grammarAccess.getExpression2Rule()); } 
	 EOF 
;

// Rule Expression2
ruleExpression2 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpression2Access().getGroup()); }
		(rule__Expression2__Group__0)
		{ after(grammarAccess.getExpression2Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression3
entryRuleExpression3
:
{ before(grammarAccess.getExpression3Rule()); }
	 ruleExpression3
{ after(grammarAccess.getExpression3Rule()); } 
	 EOF 
;

// Rule Expression3
ruleExpression3 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpression3Access().getGroup()); }
		(rule__Expression3__Group__0)
		{ after(grammarAccess.getExpression3Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression4
entryRuleExpression4
:
{ before(grammarAccess.getExpression4Rule()); }
	 ruleExpression4
{ after(grammarAccess.getExpression4Rule()); } 
	 EOF 
;

// Rule Expression4
ruleExpression4 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpression4Access().getGroup()); }
		(rule__Expression4__Group__0)
		{ after(grammarAccess.getExpression4Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression5
entryRuleExpression5
:
{ before(grammarAccess.getExpression5Rule()); }
	 ruleExpression5
{ after(grammarAccess.getExpression5Rule()); } 
	 EOF 
;

// Rule Expression5
ruleExpression5 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpression5Access().getGroup()); }
		(rule__Expression5__Group__0)
		{ after(grammarAccess.getExpression5Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryExpr
entryRuleUnaryExpr
:
{ before(grammarAccess.getUnaryExprRule()); }
	 ruleUnaryExpr
{ after(grammarAccess.getUnaryExprRule()); } 
	 EOF 
;

// Rule UnaryExpr
ruleUnaryExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryExprAccess().getAlternatives()); }
		(rule__UnaryExpr__Alternatives)
		{ after(grammarAccess.getUnaryExprAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable
entryRuleVariable
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAccess().getIdAssignment()); }
		(rule__Variable__IdAssignment)
		{ after(grammarAccess.getVariableAccess().getIdAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBinaryOpPrecedence1
entryRuleBinaryOpPrecedence1
:
{ before(grammarAccess.getBinaryOpPrecedence1Rule()); }
	 ruleBinaryOpPrecedence1
{ after(grammarAccess.getBinaryOpPrecedence1Rule()); } 
	 EOF 
;

// Rule BinaryOpPrecedence1
ruleBinaryOpPrecedence1 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBinaryOpPrecedence1Access().getVerticalLineVerticalLineKeyword()); }
		'||'
		{ after(grammarAccess.getBinaryOpPrecedence1Access().getVerticalLineVerticalLineKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBinaryOpPrecedence2
entryRuleBinaryOpPrecedence2
:
{ before(grammarAccess.getBinaryOpPrecedence2Rule()); }
	 ruleBinaryOpPrecedence2
{ after(grammarAccess.getBinaryOpPrecedence2Rule()); } 
	 EOF 
;

// Rule BinaryOpPrecedence2
ruleBinaryOpPrecedence2 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBinaryOpPrecedence2Access().getAmpersandAmpersandKeyword()); }
		'&&'
		{ after(grammarAccess.getBinaryOpPrecedence2Access().getAmpersandAmpersandKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBinaryOpPrecedence3
entryRuleBinaryOpPrecedence3
:
{ before(grammarAccess.getBinaryOpPrecedence3Rule()); }
	 ruleBinaryOpPrecedence3
{ after(grammarAccess.getBinaryOpPrecedence3Rule()); } 
	 EOF 
;

// Rule BinaryOpPrecedence3
ruleBinaryOpPrecedence3 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBinaryOpPrecedence3Access().getAlternatives()); }
		(rule__BinaryOpPrecedence3__Alternatives)
		{ after(grammarAccess.getBinaryOpPrecedence3Access().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBinaryOpPrecedence4
entryRuleBinaryOpPrecedence4
:
{ before(grammarAccess.getBinaryOpPrecedence4Rule()); }
	 ruleBinaryOpPrecedence4
{ after(grammarAccess.getBinaryOpPrecedence4Rule()); } 
	 EOF 
;

// Rule BinaryOpPrecedence4
ruleBinaryOpPrecedence4 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBinaryOpPrecedence4Access().getAlternatives()); }
		(rule__BinaryOpPrecedence4__Alternatives)
		{ after(grammarAccess.getBinaryOpPrecedence4Access().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBinaryOpPrecedence5
entryRuleBinaryOpPrecedence5
:
{ before(grammarAccess.getBinaryOpPrecedence5Rule()); }
	 ruleBinaryOpPrecedence5
{ after(grammarAccess.getBinaryOpPrecedence5Rule()); } 
	 EOF 
;

// Rule BinaryOpPrecedence5
ruleBinaryOpPrecedence5 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBinaryOpPrecedence5Access().getAlternatives()); }
		(rule__BinaryOpPrecedence5__Alternatives)
		{ after(grammarAccess.getBinaryOpPrecedence5Access().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration
:
{ before(grammarAccess.getVariableDeclarationRule()); }
	 ruleVariableDeclaration
{ after(grammarAccess.getVariableDeclarationRule()); } 
	 EOF 
;

// Rule VariableDeclaration
ruleVariableDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getAlternatives()); }
		(rule__VariableDeclaration__Alternatives)
		{ after(grammarAccess.getVariableDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReturnStatement
entryRuleReturnStatement
:
{ before(grammarAccess.getReturnStatementRule()); }
	 ruleReturnStatement
{ after(grammarAccess.getReturnStatementRule()); } 
	 EOF 
;

// Rule ReturnStatement
ruleReturnStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReturnStatementAccess().getGroup()); }
		(rule__ReturnStatement__Group__0)
		{ after(grammarAccess.getReturnStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarations__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationsAccess().getFunctionDeclarationAssignment_0()); }
		(rule__Declarations__FunctionDeclarationAssignment_0)
		{ after(grammarAccess.getDeclarationsAccess().getFunctionDeclarationAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationsAccess().getTypeDeclarationAssignment_1()); }
		(rule__Declarations__TypeDeclarationAssignment_1)
		{ after(grammarAccess.getDeclarationsAccess().getTypeDeclarationAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LineCommand__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLineCommandAccess().getGroup_0()); }
		(rule__LineCommand__Group_0__0)
		{ after(grammarAccess.getLineCommandAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getLineCommandAccess().getGroup_1()); }
		(rule__LineCommand__Group_1__0)
		{ after(grammarAccess.getLineCommandAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getLineCommandAccess().getGroup_2()); }
		(rule__LineCommand__Group_2__0)
		{ after(grammarAccess.getLineCommandAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getLineCommandAccess().getGroup_3()); }
		(rule__LineCommand__Group_3__0)
		{ after(grammarAccess.getLineCommandAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getLineCommandAccess().getGroup_4()); }
		(rule__LineCommand__Group_4__0)
		{ after(grammarAccess.getLineCommandAccess().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForRange__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForRangeAccess().getGroup_0()); }
		(rule__ForRange__Group_0__0)
		{ after(grammarAccess.getForRangeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getForRangeAccess().getGroup_1()); }
		(rule__ForRange__Group_1__0)
		{ after(grammarAccess.getForRangeAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getIntKeyword_0()); }
		'int'
		{ after(grammarAccess.getTypeAccess().getIntKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getFloat64Keyword_1()); }
		'float64'
		{ after(grammarAccess.getTypeAccess().getFloat64Keyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getBoolKeyword_2()); }
		'bool'
		{ after(grammarAccess.getTypeAccess().getBoolKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getStringKeyword_3()); }
		'string'
		{ after(grammarAccess.getTypeAccess().getStringKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getIDTerminalRuleCall_4()); }
		RULE_ID
		{ after(grammarAccess.getTypeAccess().getIDTerminalRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getIntValueAssignment_0()); }
		(rule__Value__IntValueAssignment_0)
		{ after(grammarAccess.getValueAccess().getIntValueAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getFloatValueAssignment_1()); }
		(rule__Value__FloatValueAssignment_1)
		{ after(grammarAccess.getValueAccess().getFloatValueAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getStringValueAssignment_2()); }
		(rule__Value__StringValueAssignment_2)
		{ after(grammarAccess.getValueAccess().getStringValueAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getBoolValueAssignment_3()); }
		(rule__Value__BoolValueAssignment_3)
		{ after(grammarAccess.getValueAccess().getBoolValueAssignment_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolValueAccess().getTrueKeyword_0()); }
		'true'
		{ after(grammarAccess.getBoolValueAccess().getTrueKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getBoolValueAccess().getFalseKeyword_1()); }
		'false'
		{ after(grammarAccess.getBoolValueAccess().getFalseKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExprAccess().getValueParserRuleCall_0()); }
		ruleValue
		{ after(grammarAccess.getUnaryExprAccess().getValueParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExprAccess().getVariableParserRuleCall_1()); }
		ruleVariable
		{ after(grammarAccess.getUnaryExprAccess().getVariableParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExprAccess().getFuncCallParserRuleCall_2()); }
		ruleFuncCall
		{ after(grammarAccess.getUnaryExprAccess().getFuncCallParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExprAccess().getGroup_3()); }
		(rule__UnaryExpr__Group_3__0)
		{ after(grammarAccess.getUnaryExprAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOpPrecedence3__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryOpPrecedence3Access().getEqualsSignEqualsSignKeyword_0()); }
		'=='
		{ after(grammarAccess.getBinaryOpPrecedence3Access().getEqualsSignEqualsSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOpPrecedence3Access().getExclamationMarkEqualsSignKeyword_1()); }
		'!='
		{ after(grammarAccess.getBinaryOpPrecedence3Access().getExclamationMarkEqualsSignKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOpPrecedence3Access().getLessThanSignKeyword_2()); }
		'<'
		{ after(grammarAccess.getBinaryOpPrecedence3Access().getLessThanSignKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOpPrecedence3Access().getLessThanSignEqualsSignKeyword_3()); }
		'<='
		{ after(grammarAccess.getBinaryOpPrecedence3Access().getLessThanSignEqualsSignKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOpPrecedence3Access().getGreaterThanSignKeyword_4()); }
		'>'
		{ after(grammarAccess.getBinaryOpPrecedence3Access().getGreaterThanSignKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOpPrecedence3Access().getGreaterThanSignEqualsSignKeyword_5()); }
		'>='
		{ after(grammarAccess.getBinaryOpPrecedence3Access().getGreaterThanSignEqualsSignKeyword_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOpPrecedence4__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryOpPrecedence4Access().getPlusSignKeyword_0()); }
		'+'
		{ after(grammarAccess.getBinaryOpPrecedence4Access().getPlusSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOpPrecedence4Access().getHyphenMinusKeyword_1()); }
		'-'
		{ after(grammarAccess.getBinaryOpPrecedence4Access().getHyphenMinusKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOpPrecedence4Access().getVerticalLineKeyword_2()); }
		'|'
		{ after(grammarAccess.getBinaryOpPrecedence4Access().getVerticalLineKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOpPrecedence4Access().getCircumflexAccentKeyword_3()); }
		'^'
		{ after(grammarAccess.getBinaryOpPrecedence4Access().getCircumflexAccentKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOpPrecedence5__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryOpPrecedence5Access().getAsteriskKeyword_0()); }
		'*'
		{ after(grammarAccess.getBinaryOpPrecedence5Access().getAsteriskKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOpPrecedence5Access().getSolidusKeyword_1()); }
		'/'
		{ after(grammarAccess.getBinaryOpPrecedence5Access().getSolidusKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOpPrecedence5Access().getPercentSignKeyword_2()); }
		'%'
		{ after(grammarAccess.getBinaryOpPrecedence5Access().getPercentSignKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOpPrecedence5Access().getLessThanSignLessThanSignKeyword_3()); }
		'<<'
		{ after(grammarAccess.getBinaryOpPrecedence5Access().getLessThanSignLessThanSignKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOpPrecedence5Access().getGreaterThanSignGreaterThanSignKeyword_4()); }
		'>>'
		{ after(grammarAccess.getBinaryOpPrecedence5Access().getGreaterThanSignGreaterThanSignKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOpPrecedence5Access().getAmpersandKeyword_5()); }
		'&'
		{ after(grammarAccess.getBinaryOpPrecedence5Access().getAmpersandKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOpPrecedence5Access().getAmpersandCircumflexAccentKeyword_6()); }
		'&^'
		{ after(grammarAccess.getBinaryOpPrecedence5Access().getAmpersandCircumflexAccentKeyword_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getGroup_0()); }
		(rule__VariableDeclaration__Group_0__0)
		{ after(grammarAccess.getVariableDeclarationAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getGroup_1()); }
		(rule__VariableDeclaration__Group_1__0)
		{ after(grammarAccess.getVariableDeclarationAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getGroup_2()); }
		(rule__VariableDeclaration__Group_2__0)
		{ after(grammarAccess.getVariableDeclarationAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getPackageAssignment_0()); }
	(rule__Model__PackageAssignment_0)
	{ after(grammarAccess.getModelAccess().getPackageAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getImportsAssignment_1()); }
	(rule__Model__ImportsAssignment_1)
	{ after(grammarAccess.getModelAccess().getImportsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getDeclarationsAssignment_2()); }
	(rule__Model__DeclarationsAssignment_2)*
	{ after(grammarAccess.getModelAccess().getDeclarationsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package__Group__0__Impl
	rule__Package__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageAccess().getPackageKeyword_0()); }
	'package'
	{ after(grammarAccess.getPackageAccess().getPackageKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
	{ after(grammarAccess.getPackageAccess().getIDTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Imports__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Imports__Group__0__Impl
	rule__Imports__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Imports__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportsAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getImportsAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Imports__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Imports__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Imports__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportsAccess().getSTRINGTerminalRuleCall_1()); }
	RULE_STRING
	{ after(grammarAccess.getImportsAccess().getSTRINGTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDeclaration__Group__0__Impl
	rule__FunctionDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclarationAccess().getFuncKeyword_0()); }
	'func'
	{ after(grammarAccess.getFunctionDeclarationAccess().getFuncKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDeclaration__Group__1__Impl
	rule__FunctionDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclarationAccess().getReceiverAssignment_1()); }
	(rule__FunctionDeclaration__ReceiverAssignment_1)?
	{ after(grammarAccess.getFunctionDeclarationAccess().getReceiverAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDeclaration__Group__2__Impl
	rule__FunctionDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclarationAccess().getIdAssignment_2()); }
	(rule__FunctionDeclaration__IdAssignment_2)
	{ after(grammarAccess.getFunctionDeclarationAccess().getIdAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDeclaration__Group__3__Impl
	rule__FunctionDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclarationAccess().getLeftParenthesisKeyword_3()); }
	'('
	{ after(grammarAccess.getFunctionDeclarationAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDeclaration__Group__4__Impl
	rule__FunctionDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclarationAccess().getParametersAssignment_4()); }
	(rule__FunctionDeclaration__ParametersAssignment_4)?
	{ after(grammarAccess.getFunctionDeclarationAccess().getParametersAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDeclaration__Group__5__Impl
	rule__FunctionDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclarationAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getFunctionDeclarationAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDeclaration__Group__6__Impl
	rule__FunctionDeclaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclarationAccess().getTypeAssignment_6()); }
	(rule__FunctionDeclaration__TypeAssignment_6)?
	{ after(grammarAccess.getFunctionDeclarationAccess().getTypeAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDeclaration__Group__7__Impl
	rule__FunctionDeclaration__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclarationAccess().getLeftCurlyBracketKeyword_7()); }
	'{'
	{ after(grammarAccess.getFunctionDeclarationAccess().getLeftCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDeclaration__Group__8__Impl
	rule__FunctionDeclaration__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclarationAccess().getBodyAssignment_8()); }
	(rule__FunctionDeclaration__BodyAssignment_8)
	{ after(grammarAccess.getFunctionDeclarationAccess().getBodyAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDeclaration__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclarationAccess().getRightCurlyBracketKeyword_9()); }
	'}'
	{ after(grammarAccess.getFunctionDeclarationAccess().getRightCurlyBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Receiver__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Receiver__Group__0__Impl
	rule__Receiver__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Receiver__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReceiverAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getReceiverAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Receiver__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Receiver__Group__1__Impl
	rule__Receiver__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Receiver__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReceiverAccess().getIdNameAssignment_1()); }
	(rule__Receiver__IdNameAssignment_1)
	{ after(grammarAccess.getReceiverAccess().getIdNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Receiver__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Receiver__Group__2__Impl
	rule__Receiver__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Receiver__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReceiverAccess().getIdTypeAssignment_2()); }
	(rule__Receiver__IdTypeAssignment_2)
	{ after(grammarAccess.getReceiverAccess().getIdTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Receiver__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Receiver__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Receiver__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReceiverAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getReceiverAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Body__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Body__Group__0__Impl
	rule__Body__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyAccess().getBodyAction_0()); }
	()
	{ after(grammarAccess.getBodyAccess().getBodyAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Body__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyAccess().getLineCommandAssignment_1()); }
	(rule__Body__LineCommandAssignment_1)*
	{ after(grammarAccess.getBodyAccess().getLineCommandAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LineCommand__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LineCommand__Group_0__0__Impl
	rule__LineCommand__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LineCommand__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineCommandAccess().getFuncCallParserRuleCall_0_0()); }
	ruleFuncCall
	{ after(grammarAccess.getLineCommandAccess().getFuncCallParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LineCommand__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LineCommand__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LineCommand__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineCommandAccess().getSemicolonKeyword_0_1()); }
	(';')?
	{ after(grammarAccess.getLineCommandAccess().getSemicolonKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LineCommand__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LineCommand__Group_1__0__Impl
	rule__LineCommand__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LineCommand__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineCommandAccess().getVariableDeclarationParserRuleCall_1_0()); }
	ruleVariableDeclaration
	{ after(grammarAccess.getLineCommandAccess().getVariableDeclarationParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LineCommand__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LineCommand__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LineCommand__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineCommandAccess().getSemicolonKeyword_1_1()); }
	(';')?
	{ after(grammarAccess.getLineCommandAccess().getSemicolonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LineCommand__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LineCommand__Group_2__0__Impl
	rule__LineCommand__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LineCommand__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineCommandAccess().getReturnStatementParserRuleCall_2_0()); }
	ruleReturnStatement
	{ after(grammarAccess.getLineCommandAccess().getReturnStatementParserRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LineCommand__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LineCommand__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LineCommand__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineCommandAccess().getSemicolonKeyword_2_1()); }
	(';')?
	{ after(grammarAccess.getLineCommandAccess().getSemicolonKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LineCommand__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LineCommand__Group_3__0__Impl
	rule__LineCommand__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LineCommand__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineCommandAccess().getForRangeParserRuleCall_3_0()); }
	ruleForRange
	{ after(grammarAccess.getLineCommandAccess().getForRangeParserRuleCall_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LineCommand__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LineCommand__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LineCommand__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineCommandAccess().getSemicolonKeyword_3_1()); }
	(';')?
	{ after(grammarAccess.getLineCommandAccess().getSemicolonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LineCommand__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LineCommand__Group_4__0__Impl
	rule__LineCommand__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LineCommand__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineCommandAccess().getAssignmentParserRuleCall_4_0()); }
	ruleAssignment
	{ after(grammarAccess.getLineCommandAccess().getAssignmentParserRuleCall_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LineCommand__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LineCommand__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LineCommand__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineCommandAccess().getSemicolonKeyword_4_1()); }
	(';')?
	{ after(grammarAccess.getLineCommandAccess().getSemicolonKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__0__Impl
	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getIdAssignment_0()); }
	(rule__Assignment__IdAssignment_0)
	{ after(grammarAccess.getAssignmentAccess().getIdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__1__Impl
	rule__Assignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getExpressionAssignment_2()); }
	(rule__Assignment__ExpressionAssignment_2)
	{ after(grammarAccess.getAssignmentAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForRange__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForRange__Group_0__0__Impl
	rule__ForRange__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForRange__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForRangeAccess().getForKeyword_0_0()); }
	'for'
	{ after(grammarAccess.getForRangeAccess().getForKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForRange__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForRange__Group_0__1__Impl
	rule__ForRange__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForRange__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForRangeAccess().getId1Assignment_0_1()); }
	(rule__ForRange__Id1Assignment_0_1)
	{ after(grammarAccess.getForRangeAccess().getId1Assignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForRange__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForRange__Group_0__2__Impl
	rule__ForRange__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForRange__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForRangeAccess().getColonEqualsSignKeyword_0_2()); }
	':='
	{ after(grammarAccess.getForRangeAccess().getColonEqualsSignKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForRange__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForRange__Group_0__3__Impl
	rule__ForRange__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForRange__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForRangeAccess().getRangeKeyword_0_3()); }
	'range'
	{ after(grammarAccess.getForRangeAccess().getRangeKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForRange__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForRange__Group_0__4__Impl
	rule__ForRange__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForRange__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForRangeAccess().getExpressionAssignment_0_4()); }
	(rule__ForRange__ExpressionAssignment_0_4)
	{ after(grammarAccess.getForRangeAccess().getExpressionAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForRange__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForRange__Group_0__5__Impl
	rule__ForRange__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForRange__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForRangeAccess().getLeftCurlyBracketKeyword_0_5()); }
	'{'
	{ after(grammarAccess.getForRangeAccess().getLeftCurlyBracketKeyword_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForRange__Group_0__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForRange__Group_0__6__Impl
	rule__ForRange__Group_0__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForRange__Group_0__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForRangeAccess().getLineCommandAssignment_0_6()); }
	(rule__ForRange__LineCommandAssignment_0_6)*
	{ after(grammarAccess.getForRangeAccess().getLineCommandAssignment_0_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForRange__Group_0__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForRange__Group_0__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForRange__Group_0__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForRangeAccess().getRightCurlyBracketKeyword_0_7()); }
	'}'
	{ after(grammarAccess.getForRangeAccess().getRightCurlyBracketKeyword_0_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForRange__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForRange__Group_1__0__Impl
	rule__ForRange__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForRange__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForRangeAccess().getForKeyword_1_0()); }
	'for'
	{ after(grammarAccess.getForRangeAccess().getForKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForRange__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForRange__Group_1__1__Impl
	rule__ForRange__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForRange__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForRangeAccess().getId1Assignment_1_1()); }
	(rule__ForRange__Id1Assignment_1_1)
	{ after(grammarAccess.getForRangeAccess().getId1Assignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForRange__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForRange__Group_1__2__Impl
	rule__ForRange__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForRange__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForRangeAccess().getCommaKeyword_1_2()); }
	','
	{ after(grammarAccess.getForRangeAccess().getCommaKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForRange__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForRange__Group_1__3__Impl
	rule__ForRange__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForRange__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForRangeAccess().getId2Assignment_1_3()); }
	(rule__ForRange__Id2Assignment_1_3)
	{ after(grammarAccess.getForRangeAccess().getId2Assignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForRange__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForRange__Group_1__4__Impl
	rule__ForRange__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForRange__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForRangeAccess().getColonEqualsSignKeyword_1_4()); }
	':='
	{ after(grammarAccess.getForRangeAccess().getColonEqualsSignKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForRange__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForRange__Group_1__5__Impl
	rule__ForRange__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForRange__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForRangeAccess().getRangeKeyword_1_5()); }
	'range'
	{ after(grammarAccess.getForRangeAccess().getRangeKeyword_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForRange__Group_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForRange__Group_1__6__Impl
	rule__ForRange__Group_1__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForRange__Group_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForRangeAccess().getExpressionAssignment_1_6()); }
	(rule__ForRange__ExpressionAssignment_1_6)
	{ after(grammarAccess.getForRangeAccess().getExpressionAssignment_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForRange__Group_1__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForRange__Group_1__7__Impl
	rule__ForRange__Group_1__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ForRange__Group_1__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForRangeAccess().getLeftCurlyBracketKeyword_1_7()); }
	'{'
	{ after(grammarAccess.getForRangeAccess().getLeftCurlyBracketKeyword_1_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForRange__Group_1__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForRange__Group_1__8__Impl
	rule__ForRange__Group_1__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ForRange__Group_1__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForRangeAccess().getLineCommandAssignment_1_8()); }
	(rule__ForRange__LineCommandAssignment_1_8)*
	{ after(grammarAccess.getForRangeAccess().getLineCommandAssignment_1_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForRange__Group_1__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForRange__Group_1__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForRange__Group_1__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForRangeAccess().getRightCurlyBracketKeyword_1_9()); }
	'}'
	{ after(grammarAccess.getForRangeAccess().getRightCurlyBracketKeyword_1_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParametersDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParametersDeclaration__Group__0__Impl
	rule__ParametersDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersDeclarationAccess().getIdTypeAssignment_0()); }
	(rule__ParametersDeclaration__IdTypeAssignment_0)
	{ after(grammarAccess.getParametersDeclarationAccess().getIdTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParametersDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersDeclarationAccess().getGroup_1()); }
	(rule__ParametersDeclaration__Group_1__0)*
	{ after(grammarAccess.getParametersDeclarationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParametersDeclaration__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParametersDeclaration__Group_1__0__Impl
	rule__ParametersDeclaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersDeclaration__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersDeclarationAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getParametersDeclarationAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersDeclaration__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParametersDeclaration__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersDeclaration__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersDeclarationAccess().getIdTypeAssignment_1_1()); }
	(rule__ParametersDeclaration__IdTypeAssignment_1_1)
	{ after(grammarAccess.getParametersDeclarationAccess().getIdTypeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParametersValues__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParametersValues__Group__0__Impl
	rule__ParametersValues__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersValues__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersValuesAccess().getParametersValuesAction_0()); }
	()
	{ after(grammarAccess.getParametersValuesAccess().getParametersValuesAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersValues__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParametersValues__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersValues__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersValuesAccess().getGroup_1()); }
	(rule__ParametersValues__Group_1__0)?
	{ after(grammarAccess.getParametersValuesAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParametersValues__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParametersValues__Group_1__0__Impl
	rule__ParametersValues__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersValues__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersValuesAccess().getExpressionAssignment_1_0()); }
	(rule__ParametersValues__ExpressionAssignment_1_0)
	{ after(grammarAccess.getParametersValuesAccess().getExpressionAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersValues__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParametersValues__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersValues__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersValuesAccess().getGroup_1_1()); }
	(rule__ParametersValues__Group_1_1__0)*
	{ after(grammarAccess.getParametersValuesAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParametersValues__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParametersValues__Group_1_1__0__Impl
	rule__ParametersValues__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersValues__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersValuesAccess().getCommaKeyword_1_1_0()); }
	','
	{ after(grammarAccess.getParametersValuesAccess().getCommaKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersValues__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParametersValues__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersValues__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersValuesAccess().getExpressionAssignment_1_1_1()); }
	(rule__ParametersValues__ExpressionAssignment_1_1_1)
	{ after(grammarAccess.getParametersValuesAccess().getExpressionAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDeclaration__Group__0__Impl
	rule__TypeDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclarationAccess().getTypeKeyword_0()); }
	'type'
	{ after(grammarAccess.getTypeDeclarationAccess().getTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDeclaration__Group__1__Impl
	rule__TypeDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclarationAccess().getIdAssignment_1()); }
	(rule__TypeDeclaration__IdAssignment_1)
	{ after(grammarAccess.getTypeDeclarationAccess().getIdAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclarationAccess().getTypeAssignment_2()); }
	(rule__TypeDeclaration__TypeAssignment_2)
	{ after(grammarAccess.getTypeDeclarationAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FloatValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatValue__Group__0__Impl
	rule__FloatValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatValueAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
	{ after(grammarAccess.getFloatValueAccess().getINTTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatValue__Group__1__Impl
	rule__FloatValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatValueAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getFloatValueAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatValue__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatValue__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatValue__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatValueAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
	{ after(grammarAccess.getFloatValueAccess().getINTTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IdType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdType__Group__0__Impl
	rule__IdType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdTypeAccess().getIdAssignment_0()); }
	(rule__IdType__IdAssignment_0)
	{ after(grammarAccess.getIdTypeAccess().getIdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdTypeAccess().getTypeAssignment_1()); }
	(rule__IdType__TypeAssignment_1)
	{ after(grammarAccess.getIdTypeAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FuncCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncCall__Group__0__Impl
	rule__FuncCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncCallAccess().getReceiverInstanceAssignment_0()); }
	(rule__FuncCall__ReceiverInstanceAssignment_0)?
	{ after(grammarAccess.getFuncCallAccess().getReceiverInstanceAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncCall__Group__1__Impl
	rule__FuncCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncCallAccess().getIdAssignment_1()); }
	(rule__FuncCall__IdAssignment_1)
	{ after(grammarAccess.getFuncCallAccess().getIdAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncCall__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncCall__Group__2__Impl
	rule__FuncCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncCall__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncCallAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getFuncCallAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncCall__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncCall__Group__3__Impl
	rule__FuncCall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncCall__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncCallAccess().getParametersValuesAssignment_3()); }
	(rule__FuncCall__ParametersValuesAssignment_3)
	{ after(grammarAccess.getFuncCallAccess().getParametersValuesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncCall__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncCall__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncCall__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncCallAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getFuncCallAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReceiverInstance__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReceiverInstance__Group__0__Impl
	rule__ReceiverInstance__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiverInstance__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReceiverInstanceAccess().getIdAssignment_0()); }
	(rule__ReceiverInstance__IdAssignment_0)
	{ after(grammarAccess.getReceiverInstanceAccess().getIdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiverInstance__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReceiverInstance__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiverInstance__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReceiverInstanceAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getReceiverInstanceAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getExpression2ParserRuleCall_0()); }
	ruleExpression2
	{ after(grammarAccess.getExpressionAccess().getExpression2ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getGroup_1()); }
	(rule__Expression__Group_1__0)*
	{ after(grammarAccess.getExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__0__Impl
	rule__Expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getExpressionAccess().getExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__1__Impl
	rule__Expression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getBinaryOpAssignment_1_1()); }
	(rule__Expression__BinaryOpAssignment_1_1)
	{ after(grammarAccess.getExpressionAccess().getBinaryOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getRightAssignment_1_2()); }
	(rule__Expression__RightAssignment_1_2)
	{ after(grammarAccess.getExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression2__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression2__Group__0__Impl
	rule__Expression2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression2Access().getExpression3ParserRuleCall_0()); }
	ruleExpression3
	{ after(grammarAccess.getExpression2Access().getExpression3ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression2__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression2Access().getGroup_1()); }
	(rule__Expression2__Group_1__0)*
	{ after(grammarAccess.getExpression2Access().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression2__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression2__Group_1__0__Impl
	rule__Expression2__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression2Access().getExpression2LeftAction_1_0()); }
	()
	{ after(grammarAccess.getExpression2Access().getExpression2LeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression2__Group_1__1__Impl
	rule__Expression2__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression2Access().getBinaryOpAssignment_1_1()); }
	(rule__Expression2__BinaryOpAssignment_1_1)
	{ after(grammarAccess.getExpression2Access().getBinaryOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression2__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression2Access().getRightAssignment_1_2()); }
	(rule__Expression2__RightAssignment_1_2)
	{ after(grammarAccess.getExpression2Access().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression3__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression3__Group__0__Impl
	rule__Expression3__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression3__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression3Access().getExpression4ParserRuleCall_0()); }
	ruleExpression4
	{ after(grammarAccess.getExpression3Access().getExpression4ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression3__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression3__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression3__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression3Access().getGroup_1()); }
	(rule__Expression3__Group_1__0)*
	{ after(grammarAccess.getExpression3Access().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression3__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression3__Group_1__0__Impl
	rule__Expression3__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression3__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression3Access().getExpression3LeftAction_1_0()); }
	()
	{ after(grammarAccess.getExpression3Access().getExpression3LeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression3__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression3__Group_1__1__Impl
	rule__Expression3__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression3__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression3Access().getBinaryOpAssignment_1_1()); }
	(rule__Expression3__BinaryOpAssignment_1_1)
	{ after(grammarAccess.getExpression3Access().getBinaryOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression3__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression3__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression3__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression3Access().getRightAssignment_1_2()); }
	(rule__Expression3__RightAssignment_1_2)
	{ after(grammarAccess.getExpression3Access().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression4__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression4__Group__0__Impl
	rule__Expression4__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression4__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression4Access().getExpression5ParserRuleCall_0()); }
	ruleExpression5
	{ after(grammarAccess.getExpression4Access().getExpression5ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression4__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression4__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression4__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression4Access().getGroup_1()); }
	(rule__Expression4__Group_1__0)*
	{ after(grammarAccess.getExpression4Access().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression4__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression4__Group_1__0__Impl
	rule__Expression4__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression4__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression4Access().getExpression4LeftAction_1_0()); }
	()
	{ after(grammarAccess.getExpression4Access().getExpression4LeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression4__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression4__Group_1__1__Impl
	rule__Expression4__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression4__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression4Access().getBinaryOpAssignment_1_1()); }
	(rule__Expression4__BinaryOpAssignment_1_1)
	{ after(grammarAccess.getExpression4Access().getBinaryOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression4__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression4__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression4__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression4Access().getRightAssignment_1_2()); }
	(rule__Expression4__RightAssignment_1_2)
	{ after(grammarAccess.getExpression4Access().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression5__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression5__Group__0__Impl
	rule__Expression5__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression5__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression5Access().getUnaryExprParserRuleCall_0()); }
	ruleUnaryExpr
	{ after(grammarAccess.getExpression5Access().getUnaryExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression5__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression5__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression5__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression5Access().getGroup_1()); }
	(rule__Expression5__Group_1__0)*
	{ after(grammarAccess.getExpression5Access().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression5__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression5__Group_1__0__Impl
	rule__Expression5__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression5__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression5Access().getExpression5LeftAction_1_0()); }
	()
	{ after(grammarAccess.getExpression5Access().getExpression5LeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression5__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression5__Group_1__1__Impl
	rule__Expression5__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression5__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression5Access().getBinaryOpAssignment_1_1()); }
	(rule__Expression5__BinaryOpAssignment_1_1)
	{ after(grammarAccess.getExpression5Access().getBinaryOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression5__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression5__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression5__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression5Access().getRightAssignment_1_2()); }
	(rule__Expression5__RightAssignment_1_2)
	{ after(grammarAccess.getExpression5Access().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpr__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_3__0__Impl
	rule__UnaryExpr__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getLeftParenthesisKeyword_3_0()); }
	'('
	{ after(grammarAccess.getUnaryExprAccess().getLeftParenthesisKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_3__1__Impl
	rule__UnaryExpr__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getExpressionParserRuleCall_3_1()); }
	ruleExpression
	{ after(grammarAccess.getUnaryExprAccess().getExpressionParserRuleCall_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getRightParenthesisKeyword_3_2()); }
	')'
	{ after(grammarAccess.getUnaryExprAccess().getRightParenthesisKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_0__0__Impl
	rule__VariableDeclaration__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getVarKeyword_0_0()); }
	'var'
	{ after(grammarAccess.getVariableDeclarationAccess().getVarKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_0__1__Impl
	rule__VariableDeclaration__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getIdsAssignment_0_1()); }
	(rule__VariableDeclaration__IdsAssignment_0_1)
	{ after(grammarAccess.getVariableDeclarationAccess().getIdsAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_0__2__Impl
	rule__VariableDeclaration__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getGroup_0_2()); }
	(rule__VariableDeclaration__Group_0_2__0)*
	{ after(grammarAccess.getVariableDeclarationAccess().getGroup_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_0__3__Impl
	rule__VariableDeclaration__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_0_3()); }
	'='
	{ after(grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getExpressionAssignment_0_4()); }
	(rule__VariableDeclaration__ExpressionAssignment_0_4)
	{ after(grammarAccess.getVariableDeclarationAccess().getExpressionAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_0_2__0__Impl
	rule__VariableDeclaration__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getCommaKeyword_0_2_0()); }
	','
	{ after(grammarAccess.getVariableDeclarationAccess().getCommaKeyword_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getIdsAssignment_0_2_1()); }
	(rule__VariableDeclaration__IdsAssignment_0_2_1)
	{ after(grammarAccess.getVariableDeclarationAccess().getIdsAssignment_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_1__0__Impl
	rule__VariableDeclaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getVarKeyword_1_0()); }
	'var'
	{ after(grammarAccess.getVariableDeclarationAccess().getVarKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_1__1__Impl
	rule__VariableDeclaration__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getIdsAssignment_1_1()); }
	(rule__VariableDeclaration__IdsAssignment_1_1)
	{ after(grammarAccess.getVariableDeclarationAccess().getIdsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_1__2__Impl
	rule__VariableDeclaration__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getGroup_1_2()); }
	(rule__VariableDeclaration__Group_1_2__0)*
	{ after(grammarAccess.getVariableDeclarationAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_1_3()); }
	(rule__VariableDeclaration__TypeAssignment_1_3)
	{ after(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_1_2__0__Impl
	rule__VariableDeclaration__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getCommaKeyword_1_2_0()); }
	','
	{ after(grammarAccess.getVariableDeclarationAccess().getCommaKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getIdsAssignment_1_2_1()); }
	(rule__VariableDeclaration__IdsAssignment_1_2_1)
	{ after(grammarAccess.getVariableDeclarationAccess().getIdsAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_2__0__Impl
	rule__VariableDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getVarKeyword_2_0()); }
	'var'
	{ after(grammarAccess.getVariableDeclarationAccess().getVarKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_2__1__Impl
	rule__VariableDeclaration__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getIdsAssignment_2_1()); }
	(rule__VariableDeclaration__IdsAssignment_2_1)
	{ after(grammarAccess.getVariableDeclarationAccess().getIdsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_2__2__Impl
	rule__VariableDeclaration__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getGroup_2_2()); }
	(rule__VariableDeclaration__Group_2_2__0)*
	{ after(grammarAccess.getVariableDeclarationAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_2__3__Impl
	rule__VariableDeclaration__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_2_3()); }
	(rule__VariableDeclaration__TypeAssignment_2_3)
	{ after(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_2__4__Impl
	rule__VariableDeclaration__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_2_4()); }
	'='
	{ after(grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_2__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_2__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_2__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getExpressionAssignment_2_5()); }
	(rule__VariableDeclaration__ExpressionAssignment_2_5)
	{ after(grammarAccess.getVariableDeclarationAccess().getExpressionAssignment_2_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_2_2__0__Impl
	rule__VariableDeclaration__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getCommaKeyword_2_2_0()); }
	','
	{ after(grammarAccess.getVariableDeclarationAccess().getCommaKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getIdsAssignment_2_2_1()); }
	(rule__VariableDeclaration__IdsAssignment_2_2_1)
	{ after(grammarAccess.getVariableDeclarationAccess().getIdsAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnStatement__Group__0__Impl
	rule__ReturnStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnStatementAccess().getReturnKeyword_0()); }
	'return'
	{ after(grammarAccess.getReturnStatementAccess().getReturnKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnStatementAccess().getExpressionAssignment_1()); }
	(rule__ReturnStatement__ExpressionAssignment_1)
	{ after(grammarAccess.getReturnStatementAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__PackageAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getPackagePackageParserRuleCall_0_0()); }
		rulePackage
		{ after(grammarAccess.getModelAccess().getPackagePackageParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ImportsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getImportsImportsParserRuleCall_1_0()); }
		ruleImports
		{ after(grammarAccess.getModelAccess().getImportsImportsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__DeclarationsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getDeclarationsDeclarationsParserRuleCall_2_0()); }
		ruleDeclarations
		{ after(grammarAccess.getModelAccess().getDeclarationsDeclarationsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarations__FunctionDeclarationAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationsAccess().getFunctionDeclarationFunctionDeclarationParserRuleCall_0_0()); }
		ruleFunctionDeclaration
		{ after(grammarAccess.getDeclarationsAccess().getFunctionDeclarationFunctionDeclarationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarations__TypeDeclarationAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationsAccess().getTypeDeclarationTypeDeclarationParserRuleCall_1_0()); }
		ruleTypeDeclaration
		{ after(grammarAccess.getDeclarationsAccess().getTypeDeclarationTypeDeclarationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__ReceiverAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDeclarationAccess().getReceiverReceiverParserRuleCall_1_0()); }
		ruleReceiver
		{ after(grammarAccess.getFunctionDeclarationAccess().getReceiverReceiverParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__IdAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDeclarationAccess().getIdIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getFunctionDeclarationAccess().getIdIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__ParametersAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDeclarationAccess().getParametersParametersDeclarationParserRuleCall_4_0()); }
		ruleParametersDeclaration
		{ after(grammarAccess.getFunctionDeclarationAccess().getParametersParametersDeclarationParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__TypeAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDeclarationAccess().getTypeTypeParserRuleCall_6_0()); }
		ruleType
		{ after(grammarAccess.getFunctionDeclarationAccess().getTypeTypeParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__BodyAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDeclarationAccess().getBodyBodyParserRuleCall_8_0()); }
		ruleBody
		{ after(grammarAccess.getFunctionDeclarationAccess().getBodyBodyParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Receiver__IdNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReceiverAccess().getIdNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getReceiverAccess().getIdNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Receiver__IdTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReceiverAccess().getIdTypeIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getReceiverAccess().getIdTypeIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__LineCommandAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBodyAccess().getLineCommandLineCommandParserRuleCall_1_0()); }
		ruleLineCommand
		{ after(grammarAccess.getBodyAccess().getLineCommandLineCommandParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__IdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getIdIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getAssignmentAccess().getIdIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getAssignmentAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForRange__Id1Assignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForRangeAccess().getId1IDTerminalRuleCall_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getForRangeAccess().getId1IDTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForRange__ExpressionAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForRangeAccess().getExpressionExpressionParserRuleCall_0_4_0()); }
		ruleExpression
		{ after(grammarAccess.getForRangeAccess().getExpressionExpressionParserRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForRange__LineCommandAssignment_0_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForRangeAccess().getLineCommandLineCommandParserRuleCall_0_6_0()); }
		ruleLineCommand
		{ after(grammarAccess.getForRangeAccess().getLineCommandLineCommandParserRuleCall_0_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForRange__Id1Assignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForRangeAccess().getId1IDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getForRangeAccess().getId1IDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForRange__Id2Assignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForRangeAccess().getId2IDTerminalRuleCall_1_3_0()); }
		RULE_ID
		{ after(grammarAccess.getForRangeAccess().getId2IDTerminalRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForRange__ExpressionAssignment_1_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForRangeAccess().getExpressionExpressionParserRuleCall_1_6_0()); }
		ruleExpression
		{ after(grammarAccess.getForRangeAccess().getExpressionExpressionParserRuleCall_1_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForRange__LineCommandAssignment_1_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForRangeAccess().getLineCommandLineCommandParserRuleCall_1_8_0()); }
		ruleLineCommand
		{ after(grammarAccess.getForRangeAccess().getLineCommandLineCommandParserRuleCall_1_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersDeclaration__IdTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParametersDeclarationAccess().getIdTypeIdTypeParserRuleCall_0_0()); }
		ruleIdType
		{ after(grammarAccess.getParametersDeclarationAccess().getIdTypeIdTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersDeclaration__IdTypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParametersDeclarationAccess().getIdTypeIdTypeParserRuleCall_1_1_0()); }
		ruleIdType
		{ after(grammarAccess.getParametersDeclarationAccess().getIdTypeIdTypeParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersValues__ExpressionAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParametersValuesAccess().getExpressionExpressionParserRuleCall_1_0_0()); }
		ruleExpression
		{ after(grammarAccess.getParametersValuesAccess().getExpressionExpressionParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersValues__ExpressionAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParametersValuesAccess().getExpressionExpressionParserRuleCall_1_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getParametersValuesAccess().getExpressionExpressionParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__IdAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDeclarationAccess().getIdIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTypeDeclarationAccess().getIdIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDeclarationAccess().getTypeTypeParserRuleCall_2_0()); }
		ruleType
		{ after(grammarAccess.getTypeDeclarationAccess().getTypeTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__IntValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getIntValueIntValueParserRuleCall_0_0()); }
		ruleIntValue
		{ after(grammarAccess.getValueAccess().getIntValueIntValueParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__FloatValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getFloatValueFloatValueParserRuleCall_1_0()); }
		ruleFloatValue
		{ after(grammarAccess.getValueAccess().getFloatValueFloatValueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__StringValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getStringValueStringValueParserRuleCall_2_0()); }
		ruleStringValue
		{ after(grammarAccess.getValueAccess().getStringValueStringValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__BoolValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getBoolValueBoolValueParserRuleCall_3_0()); }
		ruleBoolValue
		{ after(grammarAccess.getValueAccess().getBoolValueBoolValueParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdType__IdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdTypeAccess().getIdIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getIdTypeAccess().getIdIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdType__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdTypeAccess().getTypeTypeParserRuleCall_1_0()); }
		ruleType
		{ after(grammarAccess.getIdTypeAccess().getTypeTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncCall__ReceiverInstanceAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncCallAccess().getReceiverInstanceReceiverInstanceParserRuleCall_0_0()); }
		ruleReceiverInstance
		{ after(grammarAccess.getFuncCallAccess().getReceiverInstanceReceiverInstanceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncCall__IdAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncCallAccess().getIdIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFuncCallAccess().getIdIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncCall__ParametersValuesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncCallAccess().getParametersValuesParametersValuesParserRuleCall_3_0()); }
		ruleParametersValues
		{ after(grammarAccess.getFuncCallAccess().getParametersValuesParametersValuesParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiverInstance__IdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReceiverInstanceAccess().getIdIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getReceiverInstanceAccess().getIdIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__BinaryOpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getBinaryOpBinaryOpPrecedence1ParserRuleCall_1_1_0()); }
		ruleBinaryOpPrecedence1
		{ after(grammarAccess.getExpressionAccess().getBinaryOpBinaryOpPrecedence1ParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getRightExpression2ParserRuleCall_1_2_0()); }
		ruleExpression2
		{ after(grammarAccess.getExpressionAccess().getRightExpression2ParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__BinaryOpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpression2Access().getBinaryOpBinaryOpPrecedence2ParserRuleCall_1_1_0()); }
		ruleBinaryOpPrecedence2
		{ after(grammarAccess.getExpression2Access().getBinaryOpBinaryOpPrecedence2ParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression2__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpression2Access().getRightExpression3ParserRuleCall_1_2_0()); }
		ruleExpression3
		{ after(grammarAccess.getExpression2Access().getRightExpression3ParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression3__BinaryOpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpression3Access().getBinaryOpBinaryOpPrecedence3ParserRuleCall_1_1_0()); }
		ruleBinaryOpPrecedence3
		{ after(grammarAccess.getExpression3Access().getBinaryOpBinaryOpPrecedence3ParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression3__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpression3Access().getRightExpression4ParserRuleCall_1_2_0()); }
		ruleExpression4
		{ after(grammarAccess.getExpression3Access().getRightExpression4ParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression4__BinaryOpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpression4Access().getBinaryOpBinaryOpPrecedence4ParserRuleCall_1_1_0()); }
		ruleBinaryOpPrecedence4
		{ after(grammarAccess.getExpression4Access().getBinaryOpBinaryOpPrecedence4ParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression4__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpression4Access().getRightExpression5ParserRuleCall_1_2_0()); }
		ruleExpression5
		{ after(grammarAccess.getExpression4Access().getRightExpression5ParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression5__BinaryOpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpression5Access().getBinaryOpBinaryOpPrecedence5ParserRuleCall_1_1_0()); }
		ruleBinaryOpPrecedence5
		{ after(grammarAccess.getExpression5Access().getBinaryOpBinaryOpPrecedence5ParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression5__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpression5Access().getRightUnaryExprParserRuleCall_1_2_0()); }
		ruleUnaryExpr
		{ after(grammarAccess.getExpression5Access().getRightUnaryExprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__IdAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getIdIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableAccess().getIdIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__IdsAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getIdsIDTerminalRuleCall_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableDeclarationAccess().getIdsIDTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__IdsAssignment_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getIdsIDTerminalRuleCall_0_2_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableDeclarationAccess().getIdsIDTerminalRuleCall_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__ExpressionAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getExpressionExpressionParserRuleCall_0_4_0()); }
		ruleExpression
		{ after(grammarAccess.getVariableDeclarationAccess().getExpressionExpressionParserRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__IdsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getIdsIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableDeclarationAccess().getIdsIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__IdsAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getIdsIDTerminalRuleCall_1_2_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableDeclarationAccess().getIdsIDTerminalRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__TypeAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getTypeTypeParserRuleCall_1_3_0()); }
		ruleType
		{ after(grammarAccess.getVariableDeclarationAccess().getTypeTypeParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__IdsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getIdsIDTerminalRuleCall_2_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableDeclarationAccess().getIdsIDTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__IdsAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getIdsIDTerminalRuleCall_2_2_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableDeclarationAccess().getIdsIDTerminalRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__TypeAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getTypeTypeParserRuleCall_2_3_0()); }
		ruleType
		{ after(grammarAccess.getVariableDeclarationAccess().getTypeTypeParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__ExpressionAssignment_2_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getExpressionExpressionParserRuleCall_2_5_0()); }
		ruleExpression
		{ after(grammarAccess.getVariableDeclarationAccess().getExpressionExpressionParserRuleCall_2_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnStatementAccess().getExpressionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getReturnStatementAccess().getExpressionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
