/**
 * generated by Xtext 2.14.0
 */
package org.xtext.compiler.go.myGo;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see org.xtext.compiler.go.myGo.MyGoFactory
 * @model kind="package"
 * @generated
 */
public interface MyGoPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "myGo";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.xtext.org/compiler/go/MyGo";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "myGo";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  MyGoPackage eINSTANCE = org.xtext.compiler.go.myGo.impl.MyGoPackageImpl.init();

  /**
   * The meta object id for the '{@link org.xtext.compiler.go.myGo.impl.ModelImpl <em>Model</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.compiler.go.myGo.impl.ModelImpl
   * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getModel()
   * @generated
   */
  int MODEL = 0;

  /**
   * The feature id for the '<em><b>Package</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__PACKAGE = 0;

  /**
   * The feature id for the '<em><b>Imports</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__IMPORTS = 1;

  /**
   * The feature id for the '<em><b>Declarations</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__DECLARATIONS = 2;

  /**
   * The number of structural features of the '<em>Model</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.compiler.go.myGo.impl.DeclarationsImpl <em>Declarations</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.compiler.go.myGo.impl.DeclarationsImpl
   * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getDeclarations()
   * @generated
   */
  int DECLARATIONS = 1;

  /**
   * The feature id for the '<em><b>Function Declaration</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARATIONS__FUNCTION_DECLARATION = 0;

  /**
   * The feature id for the '<em><b>Type Declaration</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARATIONS__TYPE_DECLARATION = 1;

  /**
   * The number of structural features of the '<em>Declarations</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARATIONS_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.compiler.go.myGo.impl.FunctionDeclarationImpl <em>Function Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.compiler.go.myGo.impl.FunctionDeclarationImpl
   * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getFunctionDeclaration()
   * @generated
   */
  int FUNCTION_DECLARATION = 2;

  /**
   * The feature id for the '<em><b>Receiver</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_DECLARATION__RECEIVER = 0;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_DECLARATION__ID = 1;

  /**
   * The feature id for the '<em><b>Parameters</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_DECLARATION__PARAMETERS = 2;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_DECLARATION__TYPE = 3;

  /**
   * The feature id for the '<em><b>Body</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_DECLARATION__BODY = 4;

  /**
   * The number of structural features of the '<em>Function Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_DECLARATION_FEATURE_COUNT = 5;

  /**
   * The meta object id for the '{@link org.xtext.compiler.go.myGo.impl.ReceiverImpl <em>Receiver</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.compiler.go.myGo.impl.ReceiverImpl
   * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getReceiver()
   * @generated
   */
  int RECEIVER = 3;

  /**
   * The feature id for the '<em><b>Id Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RECEIVER__ID_NAME = 0;

  /**
   * The feature id for the '<em><b>Id Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RECEIVER__ID_TYPE = 1;

  /**
   * The number of structural features of the '<em>Receiver</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RECEIVER_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.compiler.go.myGo.impl.BodyImpl <em>Body</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.compiler.go.myGo.impl.BodyImpl
   * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getBody()
   * @generated
   */
  int BODY = 4;

  /**
   * The feature id for the '<em><b>Line Command</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BODY__LINE_COMMAND = 0;

  /**
   * The number of structural features of the '<em>Body</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BODY_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.compiler.go.myGo.impl.LineCommandImpl <em>Line Command</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.compiler.go.myGo.impl.LineCommandImpl
   * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getLineCommand()
   * @generated
   */
  int LINE_COMMAND = 5;

  /**
   * The number of structural features of the '<em>Line Command</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LINE_COMMAND_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.compiler.go.myGo.impl.AssignmentImpl <em>Assignment</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.compiler.go.myGo.impl.AssignmentImpl
   * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getAssignment()
   * @generated
   */
  int ASSIGNMENT = 6;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGNMENT__ID = LINE_COMMAND_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGNMENT__EXPRESSION = LINE_COMMAND_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Assignment</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGNMENT_FEATURE_COUNT = LINE_COMMAND_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.compiler.go.myGo.impl.ForRangeImpl <em>For Range</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.compiler.go.myGo.impl.ForRangeImpl
   * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getForRange()
   * @generated
   */
  int FOR_RANGE = 7;

  /**
   * The feature id for the '<em><b>Id1</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_RANGE__ID1 = LINE_COMMAND_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_RANGE__EXPRESSION = LINE_COMMAND_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Line Command</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_RANGE__LINE_COMMAND = LINE_COMMAND_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Id2</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_RANGE__ID2 = LINE_COMMAND_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>For Range</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_RANGE_FEATURE_COUNT = LINE_COMMAND_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link org.xtext.compiler.go.myGo.impl.ParametersDeclarationImpl <em>Parameters Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.compiler.go.myGo.impl.ParametersDeclarationImpl
   * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getParametersDeclaration()
   * @generated
   */
  int PARAMETERS_DECLARATION = 8;

  /**
   * The feature id for the '<em><b>Id Type</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMETERS_DECLARATION__ID_TYPE = 0;

  /**
   * The number of structural features of the '<em>Parameters Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMETERS_DECLARATION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.compiler.go.myGo.impl.ParametersValuesImpl <em>Parameters Values</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.compiler.go.myGo.impl.ParametersValuesImpl
   * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getParametersValues()
   * @generated
   */
  int PARAMETERS_VALUES = 9;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMETERS_VALUES__EXPRESSION = 0;

  /**
   * The number of structural features of the '<em>Parameters Values</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMETERS_VALUES_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.compiler.go.myGo.impl.TypeDeclarationImpl <em>Type Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.compiler.go.myGo.impl.TypeDeclarationImpl
   * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getTypeDeclaration()
   * @generated
   */
  int TYPE_DECLARATION = 10;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_DECLARATION__ID = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_DECLARATION__TYPE = 1;

  /**
   * The number of structural features of the '<em>Type Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_DECLARATION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.compiler.go.myGo.impl.ExpressionImpl <em>Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.compiler.go.myGo.impl.ExpressionImpl
   * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getExpression()
   * @generated
   */
  int EXPRESSION = 15;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__LEFT = 0;

  /**
   * The feature id for the '<em><b>Binary Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__BINARY_OP = 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__RIGHT = 2;

  /**
   * The number of structural features of the '<em>Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.compiler.go.myGo.impl.ValueImpl <em>Value</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.compiler.go.myGo.impl.ValueImpl
   * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getValue()
   * @generated
   */
  int VALUE = 11;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VALUE__LEFT = EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Binary Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VALUE__BINARY_OP = EXPRESSION__BINARY_OP;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VALUE__RIGHT = EXPRESSION__RIGHT;

  /**
   * The feature id for the '<em><b>Int Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VALUE__INT_VALUE = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Float Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VALUE__FLOAT_VALUE = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>String Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VALUE__STRING_VALUE = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Bool Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VALUE__BOOL_VALUE = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>Value</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VALUE_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link org.xtext.compiler.go.myGo.impl.IdTypeImpl <em>Id Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.compiler.go.myGo.impl.IdTypeImpl
   * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getIdType()
   * @generated
   */
  int ID_TYPE = 12;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ID_TYPE__ID = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ID_TYPE__TYPE = 1;

  /**
   * The number of structural features of the '<em>Id Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ID_TYPE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.compiler.go.myGo.impl.FuncCallImpl <em>Func Call</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.compiler.go.myGo.impl.FuncCallImpl
   * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getFuncCall()
   * @generated
   */
  int FUNC_CALL = 13;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNC_CALL__LEFT = LINE_COMMAND_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Binary Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNC_CALL__BINARY_OP = LINE_COMMAND_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNC_CALL__RIGHT = LINE_COMMAND_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Receiver Instance</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNC_CALL__RECEIVER_INSTANCE = LINE_COMMAND_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNC_CALL__ID = LINE_COMMAND_FEATURE_COUNT + 4;

  /**
   * The feature id for the '<em><b>Parameters Values</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNC_CALL__PARAMETERS_VALUES = LINE_COMMAND_FEATURE_COUNT + 5;

  /**
   * The number of structural features of the '<em>Func Call</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNC_CALL_FEATURE_COUNT = LINE_COMMAND_FEATURE_COUNT + 6;

  /**
   * The meta object id for the '{@link org.xtext.compiler.go.myGo.impl.ReceiverInstanceImpl <em>Receiver Instance</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.compiler.go.myGo.impl.ReceiverInstanceImpl
   * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getReceiverInstance()
   * @generated
   */
  int RECEIVER_INSTANCE = 14;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RECEIVER_INSTANCE__ID = 0;

  /**
   * The number of structural features of the '<em>Receiver Instance</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RECEIVER_INSTANCE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.compiler.go.myGo.impl.ExplicitCastImpl <em>Explicit Cast</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.compiler.go.myGo.impl.ExplicitCastImpl
   * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getExplicitCast()
   * @generated
   */
  int EXPLICIT_CAST = 16;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPLICIT_CAST__TYPE = 0;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPLICIT_CAST__EXPRESSION = 1;

  /**
   * The number of structural features of the '<em>Explicit Cast</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPLICIT_CAST_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.compiler.go.myGo.impl.VariableImpl <em>Variable</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.compiler.go.myGo.impl.VariableImpl
   * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getVariable()
   * @generated
   */
  int VARIABLE = 17;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE__LEFT = EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Binary Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE__BINARY_OP = EXPRESSION__BINARY_OP;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE__RIGHT = EXPRESSION__RIGHT;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE__ID = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Variable</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.compiler.go.myGo.impl.VariableDeclarationImpl <em>Variable Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.compiler.go.myGo.impl.VariableDeclarationImpl
   * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getVariableDeclaration()
   * @generated
   */
  int VARIABLE_DECLARATION = 18;

  /**
   * The feature id for the '<em><b>Ids</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_DECLARATION__IDS = LINE_COMMAND_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_DECLARATION__EXPRESSION = LINE_COMMAND_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_DECLARATION__TYPE = LINE_COMMAND_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Variable Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_DECLARATION_FEATURE_COUNT = LINE_COMMAND_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.compiler.go.myGo.impl.ReturnStatementImpl <em>Return Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.compiler.go.myGo.impl.ReturnStatementImpl
   * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getReturnStatement()
   * @generated
   */
  int RETURN_STATEMENT = 19;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RETURN_STATEMENT__EXPRESSION = LINE_COMMAND_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Return Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RETURN_STATEMENT_FEATURE_COUNT = LINE_COMMAND_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.compiler.go.myGo.impl.Expression2Impl <em>Expression2</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.compiler.go.myGo.impl.Expression2Impl
   * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getExpression2()
   * @generated
   */
  int EXPRESSION2 = 20;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION2__LEFT = EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Binary Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION2__BINARY_OP = EXPRESSION__BINARY_OP;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION2__RIGHT = EXPRESSION__RIGHT;

  /**
   * The number of structural features of the '<em>Expression2</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION2_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.compiler.go.myGo.impl.Expression3Impl <em>Expression3</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.compiler.go.myGo.impl.Expression3Impl
   * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getExpression3()
   * @generated
   */
  int EXPRESSION3 = 21;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION3__LEFT = EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Binary Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION3__BINARY_OP = EXPRESSION__BINARY_OP;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION3__RIGHT = EXPRESSION__RIGHT;

  /**
   * The number of structural features of the '<em>Expression3</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION3_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.compiler.go.myGo.impl.Expression4Impl <em>Expression4</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.compiler.go.myGo.impl.Expression4Impl
   * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getExpression4()
   * @generated
   */
  int EXPRESSION4 = 22;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION4__LEFT = EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Binary Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION4__BINARY_OP = EXPRESSION__BINARY_OP;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION4__RIGHT = EXPRESSION__RIGHT;

  /**
   * The number of structural features of the '<em>Expression4</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION4_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.compiler.go.myGo.impl.Expression5Impl <em>Expression5</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.compiler.go.myGo.impl.Expression5Impl
   * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getExpression5()
   * @generated
   */
  int EXPRESSION5 = 23;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION5__LEFT = EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Binary Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION5__BINARY_OP = EXPRESSION__BINARY_OP;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION5__RIGHT = EXPRESSION__RIGHT;

  /**
   * The number of structural features of the '<em>Expression5</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION5_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;


  /**
   * Returns the meta object for class '{@link org.xtext.compiler.go.myGo.Model <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Model</em>'.
   * @see org.xtext.compiler.go.myGo.Model
   * @generated
   */
  EClass getModel();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.compiler.go.myGo.Model#getPackage <em>Package</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Package</em>'.
   * @see org.xtext.compiler.go.myGo.Model#getPackage()
   * @see #getModel()
   * @generated
   */
  EAttribute getModel_Package();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.compiler.go.myGo.Model#getImports <em>Imports</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Imports</em>'.
   * @see org.xtext.compiler.go.myGo.Model#getImports()
   * @see #getModel()
   * @generated
   */
  EAttribute getModel_Imports();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.compiler.go.myGo.Model#getDeclarations <em>Declarations</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Declarations</em>'.
   * @see org.xtext.compiler.go.myGo.Model#getDeclarations()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Declarations();

  /**
   * Returns the meta object for class '{@link org.xtext.compiler.go.myGo.Declarations <em>Declarations</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Declarations</em>'.
   * @see org.xtext.compiler.go.myGo.Declarations
   * @generated
   */
  EClass getDeclarations();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.compiler.go.myGo.Declarations#getFunctionDeclaration <em>Function Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Function Declaration</em>'.
   * @see org.xtext.compiler.go.myGo.Declarations#getFunctionDeclaration()
   * @see #getDeclarations()
   * @generated
   */
  EReference getDeclarations_FunctionDeclaration();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.compiler.go.myGo.Declarations#getTypeDeclaration <em>Type Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type Declaration</em>'.
   * @see org.xtext.compiler.go.myGo.Declarations#getTypeDeclaration()
   * @see #getDeclarations()
   * @generated
   */
  EReference getDeclarations_TypeDeclaration();

  /**
   * Returns the meta object for class '{@link org.xtext.compiler.go.myGo.FunctionDeclaration <em>Function Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Function Declaration</em>'.
   * @see org.xtext.compiler.go.myGo.FunctionDeclaration
   * @generated
   */
  EClass getFunctionDeclaration();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.compiler.go.myGo.FunctionDeclaration#getReceiver <em>Receiver</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Receiver</em>'.
   * @see org.xtext.compiler.go.myGo.FunctionDeclaration#getReceiver()
   * @see #getFunctionDeclaration()
   * @generated
   */
  EReference getFunctionDeclaration_Receiver();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.compiler.go.myGo.FunctionDeclaration#getId <em>Id</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Id</em>'.
   * @see org.xtext.compiler.go.myGo.FunctionDeclaration#getId()
   * @see #getFunctionDeclaration()
   * @generated
   */
  EAttribute getFunctionDeclaration_Id();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.compiler.go.myGo.FunctionDeclaration#getParameters <em>Parameters</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Parameters</em>'.
   * @see org.xtext.compiler.go.myGo.FunctionDeclaration#getParameters()
   * @see #getFunctionDeclaration()
   * @generated
   */
  EReference getFunctionDeclaration_Parameters();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.compiler.go.myGo.FunctionDeclaration#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see org.xtext.compiler.go.myGo.FunctionDeclaration#getType()
   * @see #getFunctionDeclaration()
   * @generated
   */
  EAttribute getFunctionDeclaration_Type();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.compiler.go.myGo.FunctionDeclaration#getBody <em>Body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Body</em>'.
   * @see org.xtext.compiler.go.myGo.FunctionDeclaration#getBody()
   * @see #getFunctionDeclaration()
   * @generated
   */
  EReference getFunctionDeclaration_Body();

  /**
   * Returns the meta object for class '{@link org.xtext.compiler.go.myGo.Receiver <em>Receiver</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Receiver</em>'.
   * @see org.xtext.compiler.go.myGo.Receiver
   * @generated
   */
  EClass getReceiver();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.compiler.go.myGo.Receiver#getIdName <em>Id Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Id Name</em>'.
   * @see org.xtext.compiler.go.myGo.Receiver#getIdName()
   * @see #getReceiver()
   * @generated
   */
  EAttribute getReceiver_IdName();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.compiler.go.myGo.Receiver#getIdType <em>Id Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Id Type</em>'.
   * @see org.xtext.compiler.go.myGo.Receiver#getIdType()
   * @see #getReceiver()
   * @generated
   */
  EAttribute getReceiver_IdType();

  /**
   * Returns the meta object for class '{@link org.xtext.compiler.go.myGo.Body <em>Body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Body</em>'.
   * @see org.xtext.compiler.go.myGo.Body
   * @generated
   */
  EClass getBody();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.compiler.go.myGo.Body#getLineCommand <em>Line Command</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Line Command</em>'.
   * @see org.xtext.compiler.go.myGo.Body#getLineCommand()
   * @see #getBody()
   * @generated
   */
  EReference getBody_LineCommand();

  /**
   * Returns the meta object for class '{@link org.xtext.compiler.go.myGo.LineCommand <em>Line Command</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Line Command</em>'.
   * @see org.xtext.compiler.go.myGo.LineCommand
   * @generated
   */
  EClass getLineCommand();

  /**
   * Returns the meta object for class '{@link org.xtext.compiler.go.myGo.Assignment <em>Assignment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Assignment</em>'.
   * @see org.xtext.compiler.go.myGo.Assignment
   * @generated
   */
  EClass getAssignment();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.compiler.go.myGo.Assignment#getId <em>Id</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Id</em>'.
   * @see org.xtext.compiler.go.myGo.Assignment#getId()
   * @see #getAssignment()
   * @generated
   */
  EAttribute getAssignment_Id();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.compiler.go.myGo.Assignment#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.xtext.compiler.go.myGo.Assignment#getExpression()
   * @see #getAssignment()
   * @generated
   */
  EReference getAssignment_Expression();

  /**
   * Returns the meta object for class '{@link org.xtext.compiler.go.myGo.ForRange <em>For Range</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>For Range</em>'.
   * @see org.xtext.compiler.go.myGo.ForRange
   * @generated
   */
  EClass getForRange();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.compiler.go.myGo.ForRange#getId1 <em>Id1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Id1</em>'.
   * @see org.xtext.compiler.go.myGo.ForRange#getId1()
   * @see #getForRange()
   * @generated
   */
  EAttribute getForRange_Id1();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.compiler.go.myGo.ForRange#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.xtext.compiler.go.myGo.ForRange#getExpression()
   * @see #getForRange()
   * @generated
   */
  EReference getForRange_Expression();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.compiler.go.myGo.ForRange#getLineCommand <em>Line Command</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Line Command</em>'.
   * @see org.xtext.compiler.go.myGo.ForRange#getLineCommand()
   * @see #getForRange()
   * @generated
   */
  EReference getForRange_LineCommand();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.compiler.go.myGo.ForRange#getId2 <em>Id2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Id2</em>'.
   * @see org.xtext.compiler.go.myGo.ForRange#getId2()
   * @see #getForRange()
   * @generated
   */
  EAttribute getForRange_Id2();

  /**
   * Returns the meta object for class '{@link org.xtext.compiler.go.myGo.ParametersDeclaration <em>Parameters Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Parameters Declaration</em>'.
   * @see org.xtext.compiler.go.myGo.ParametersDeclaration
   * @generated
   */
  EClass getParametersDeclaration();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.compiler.go.myGo.ParametersDeclaration#getIdType <em>Id Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Id Type</em>'.
   * @see org.xtext.compiler.go.myGo.ParametersDeclaration#getIdType()
   * @see #getParametersDeclaration()
   * @generated
   */
  EReference getParametersDeclaration_IdType();

  /**
   * Returns the meta object for class '{@link org.xtext.compiler.go.myGo.ParametersValues <em>Parameters Values</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Parameters Values</em>'.
   * @see org.xtext.compiler.go.myGo.ParametersValues
   * @generated
   */
  EClass getParametersValues();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.compiler.go.myGo.ParametersValues#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Expression</em>'.
   * @see org.xtext.compiler.go.myGo.ParametersValues#getExpression()
   * @see #getParametersValues()
   * @generated
   */
  EReference getParametersValues_Expression();

  /**
   * Returns the meta object for class '{@link org.xtext.compiler.go.myGo.TypeDeclaration <em>Type Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Type Declaration</em>'.
   * @see org.xtext.compiler.go.myGo.TypeDeclaration
   * @generated
   */
  EClass getTypeDeclaration();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.compiler.go.myGo.TypeDeclaration#getId <em>Id</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Id</em>'.
   * @see org.xtext.compiler.go.myGo.TypeDeclaration#getId()
   * @see #getTypeDeclaration()
   * @generated
   */
  EAttribute getTypeDeclaration_Id();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.compiler.go.myGo.TypeDeclaration#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see org.xtext.compiler.go.myGo.TypeDeclaration#getType()
   * @see #getTypeDeclaration()
   * @generated
   */
  EAttribute getTypeDeclaration_Type();

  /**
   * Returns the meta object for class '{@link org.xtext.compiler.go.myGo.Value <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Value</em>'.
   * @see org.xtext.compiler.go.myGo.Value
   * @generated
   */
  EClass getValue();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.compiler.go.myGo.Value#getIntValue <em>Int Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Int Value</em>'.
   * @see org.xtext.compiler.go.myGo.Value#getIntValue()
   * @see #getValue()
   * @generated
   */
  EAttribute getValue_IntValue();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.compiler.go.myGo.Value#getFloatValue <em>Float Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Float Value</em>'.
   * @see org.xtext.compiler.go.myGo.Value#getFloatValue()
   * @see #getValue()
   * @generated
   */
  EAttribute getValue_FloatValue();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.compiler.go.myGo.Value#getStringValue <em>String Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>String Value</em>'.
   * @see org.xtext.compiler.go.myGo.Value#getStringValue()
   * @see #getValue()
   * @generated
   */
  EAttribute getValue_StringValue();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.compiler.go.myGo.Value#getBoolValue <em>Bool Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Bool Value</em>'.
   * @see org.xtext.compiler.go.myGo.Value#getBoolValue()
   * @see #getValue()
   * @generated
   */
  EAttribute getValue_BoolValue();

  /**
   * Returns the meta object for class '{@link org.xtext.compiler.go.myGo.IdType <em>Id Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Id Type</em>'.
   * @see org.xtext.compiler.go.myGo.IdType
   * @generated
   */
  EClass getIdType();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.compiler.go.myGo.IdType#getId <em>Id</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Id</em>'.
   * @see org.xtext.compiler.go.myGo.IdType#getId()
   * @see #getIdType()
   * @generated
   */
  EAttribute getIdType_Id();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.compiler.go.myGo.IdType#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see org.xtext.compiler.go.myGo.IdType#getType()
   * @see #getIdType()
   * @generated
   */
  EAttribute getIdType_Type();

  /**
   * Returns the meta object for class '{@link org.xtext.compiler.go.myGo.FuncCall <em>Func Call</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Func Call</em>'.
   * @see org.xtext.compiler.go.myGo.FuncCall
   * @generated
   */
  EClass getFuncCall();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.compiler.go.myGo.FuncCall#getReceiverInstance <em>Receiver Instance</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Receiver Instance</em>'.
   * @see org.xtext.compiler.go.myGo.FuncCall#getReceiverInstance()
   * @see #getFuncCall()
   * @generated
   */
  EReference getFuncCall_ReceiverInstance();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.compiler.go.myGo.FuncCall#getId <em>Id</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Id</em>'.
   * @see org.xtext.compiler.go.myGo.FuncCall#getId()
   * @see #getFuncCall()
   * @generated
   */
  EAttribute getFuncCall_Id();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.compiler.go.myGo.FuncCall#getParametersValues <em>Parameters Values</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Parameters Values</em>'.
   * @see org.xtext.compiler.go.myGo.FuncCall#getParametersValues()
   * @see #getFuncCall()
   * @generated
   */
  EReference getFuncCall_ParametersValues();

  /**
   * Returns the meta object for class '{@link org.xtext.compiler.go.myGo.ReceiverInstance <em>Receiver Instance</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Receiver Instance</em>'.
   * @see org.xtext.compiler.go.myGo.ReceiverInstance
   * @generated
   */
  EClass getReceiverInstance();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.compiler.go.myGo.ReceiverInstance#getId <em>Id</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Id</em>'.
   * @see org.xtext.compiler.go.myGo.ReceiverInstance#getId()
   * @see #getReceiverInstance()
   * @generated
   */
  EAttribute getReceiverInstance_Id();

  /**
   * Returns the meta object for class '{@link org.xtext.compiler.go.myGo.Expression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression</em>'.
   * @see org.xtext.compiler.go.myGo.Expression
   * @generated
   */
  EClass getExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.compiler.go.myGo.Expression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.xtext.compiler.go.myGo.Expression#getLeft()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Left();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.compiler.go.myGo.Expression#getBinaryOp <em>Binary Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Binary Op</em>'.
   * @see org.xtext.compiler.go.myGo.Expression#getBinaryOp()
   * @see #getExpression()
   * @generated
   */
  EAttribute getExpression_BinaryOp();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.compiler.go.myGo.Expression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.xtext.compiler.go.myGo.Expression#getRight()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Right();

  /**
   * Returns the meta object for class '{@link org.xtext.compiler.go.myGo.ExplicitCast <em>Explicit Cast</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Explicit Cast</em>'.
   * @see org.xtext.compiler.go.myGo.ExplicitCast
   * @generated
   */
  EClass getExplicitCast();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.compiler.go.myGo.ExplicitCast#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see org.xtext.compiler.go.myGo.ExplicitCast#getType()
   * @see #getExplicitCast()
   * @generated
   */
  EAttribute getExplicitCast_Type();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.compiler.go.myGo.ExplicitCast#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.xtext.compiler.go.myGo.ExplicitCast#getExpression()
   * @see #getExplicitCast()
   * @generated
   */
  EReference getExplicitCast_Expression();

  /**
   * Returns the meta object for class '{@link org.xtext.compiler.go.myGo.Variable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Variable</em>'.
   * @see org.xtext.compiler.go.myGo.Variable
   * @generated
   */
  EClass getVariable();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.compiler.go.myGo.Variable#getId <em>Id</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Id</em>'.
   * @see org.xtext.compiler.go.myGo.Variable#getId()
   * @see #getVariable()
   * @generated
   */
  EAttribute getVariable_Id();

  /**
   * Returns the meta object for class '{@link org.xtext.compiler.go.myGo.VariableDeclaration <em>Variable Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Variable Declaration</em>'.
   * @see org.xtext.compiler.go.myGo.VariableDeclaration
   * @generated
   */
  EClass getVariableDeclaration();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.compiler.go.myGo.VariableDeclaration#getIds <em>Ids</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Ids</em>'.
   * @see org.xtext.compiler.go.myGo.VariableDeclaration#getIds()
   * @see #getVariableDeclaration()
   * @generated
   */
  EAttribute getVariableDeclaration_Ids();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.compiler.go.myGo.VariableDeclaration#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.xtext.compiler.go.myGo.VariableDeclaration#getExpression()
   * @see #getVariableDeclaration()
   * @generated
   */
  EReference getVariableDeclaration_Expression();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.compiler.go.myGo.VariableDeclaration#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see org.xtext.compiler.go.myGo.VariableDeclaration#getType()
   * @see #getVariableDeclaration()
   * @generated
   */
  EAttribute getVariableDeclaration_Type();

  /**
   * Returns the meta object for class '{@link org.xtext.compiler.go.myGo.ReturnStatement <em>Return Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Return Statement</em>'.
   * @see org.xtext.compiler.go.myGo.ReturnStatement
   * @generated
   */
  EClass getReturnStatement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.compiler.go.myGo.ReturnStatement#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.xtext.compiler.go.myGo.ReturnStatement#getExpression()
   * @see #getReturnStatement()
   * @generated
   */
  EReference getReturnStatement_Expression();

  /**
   * Returns the meta object for class '{@link org.xtext.compiler.go.myGo.Expression2 <em>Expression2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression2</em>'.
   * @see org.xtext.compiler.go.myGo.Expression2
   * @generated
   */
  EClass getExpression2();

  /**
   * Returns the meta object for class '{@link org.xtext.compiler.go.myGo.Expression3 <em>Expression3</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression3</em>'.
   * @see org.xtext.compiler.go.myGo.Expression3
   * @generated
   */
  EClass getExpression3();

  /**
   * Returns the meta object for class '{@link org.xtext.compiler.go.myGo.Expression4 <em>Expression4</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression4</em>'.
   * @see org.xtext.compiler.go.myGo.Expression4
   * @generated
   */
  EClass getExpression4();

  /**
   * Returns the meta object for class '{@link org.xtext.compiler.go.myGo.Expression5 <em>Expression5</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression5</em>'.
   * @see org.xtext.compiler.go.myGo.Expression5
   * @generated
   */
  EClass getExpression5();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  MyGoFactory getMyGoFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link org.xtext.compiler.go.myGo.impl.ModelImpl <em>Model</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.compiler.go.myGo.impl.ModelImpl
     * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getModel()
     * @generated
     */
    EClass MODEL = eINSTANCE.getModel();

    /**
     * The meta object literal for the '<em><b>Package</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MODEL__PACKAGE = eINSTANCE.getModel_Package();

    /**
     * The meta object literal for the '<em><b>Imports</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MODEL__IMPORTS = eINSTANCE.getModel_Imports();

    /**
     * The meta object literal for the '<em><b>Declarations</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__DECLARATIONS = eINSTANCE.getModel_Declarations();

    /**
     * The meta object literal for the '{@link org.xtext.compiler.go.myGo.impl.DeclarationsImpl <em>Declarations</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.compiler.go.myGo.impl.DeclarationsImpl
     * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getDeclarations()
     * @generated
     */
    EClass DECLARATIONS = eINSTANCE.getDeclarations();

    /**
     * The meta object literal for the '<em><b>Function Declaration</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DECLARATIONS__FUNCTION_DECLARATION = eINSTANCE.getDeclarations_FunctionDeclaration();

    /**
     * The meta object literal for the '<em><b>Type Declaration</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DECLARATIONS__TYPE_DECLARATION = eINSTANCE.getDeclarations_TypeDeclaration();

    /**
     * The meta object literal for the '{@link org.xtext.compiler.go.myGo.impl.FunctionDeclarationImpl <em>Function Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.compiler.go.myGo.impl.FunctionDeclarationImpl
     * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getFunctionDeclaration()
     * @generated
     */
    EClass FUNCTION_DECLARATION = eINSTANCE.getFunctionDeclaration();

    /**
     * The meta object literal for the '<em><b>Receiver</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_DECLARATION__RECEIVER = eINSTANCE.getFunctionDeclaration_Receiver();

    /**
     * The meta object literal for the '<em><b>Id</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FUNCTION_DECLARATION__ID = eINSTANCE.getFunctionDeclaration_Id();

    /**
     * The meta object literal for the '<em><b>Parameters</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_DECLARATION__PARAMETERS = eINSTANCE.getFunctionDeclaration_Parameters();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FUNCTION_DECLARATION__TYPE = eINSTANCE.getFunctionDeclaration_Type();

    /**
     * The meta object literal for the '<em><b>Body</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_DECLARATION__BODY = eINSTANCE.getFunctionDeclaration_Body();

    /**
     * The meta object literal for the '{@link org.xtext.compiler.go.myGo.impl.ReceiverImpl <em>Receiver</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.compiler.go.myGo.impl.ReceiverImpl
     * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getReceiver()
     * @generated
     */
    EClass RECEIVER = eINSTANCE.getReceiver();

    /**
     * The meta object literal for the '<em><b>Id Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RECEIVER__ID_NAME = eINSTANCE.getReceiver_IdName();

    /**
     * The meta object literal for the '<em><b>Id Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RECEIVER__ID_TYPE = eINSTANCE.getReceiver_IdType();

    /**
     * The meta object literal for the '{@link org.xtext.compiler.go.myGo.impl.BodyImpl <em>Body</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.compiler.go.myGo.impl.BodyImpl
     * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getBody()
     * @generated
     */
    EClass BODY = eINSTANCE.getBody();

    /**
     * The meta object literal for the '<em><b>Line Command</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BODY__LINE_COMMAND = eINSTANCE.getBody_LineCommand();

    /**
     * The meta object literal for the '{@link org.xtext.compiler.go.myGo.impl.LineCommandImpl <em>Line Command</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.compiler.go.myGo.impl.LineCommandImpl
     * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getLineCommand()
     * @generated
     */
    EClass LINE_COMMAND = eINSTANCE.getLineCommand();

    /**
     * The meta object literal for the '{@link org.xtext.compiler.go.myGo.impl.AssignmentImpl <em>Assignment</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.compiler.go.myGo.impl.AssignmentImpl
     * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getAssignment()
     * @generated
     */
    EClass ASSIGNMENT = eINSTANCE.getAssignment();

    /**
     * The meta object literal for the '<em><b>Id</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ASSIGNMENT__ID = eINSTANCE.getAssignment_Id();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSIGNMENT__EXPRESSION = eINSTANCE.getAssignment_Expression();

    /**
     * The meta object literal for the '{@link org.xtext.compiler.go.myGo.impl.ForRangeImpl <em>For Range</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.compiler.go.myGo.impl.ForRangeImpl
     * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getForRange()
     * @generated
     */
    EClass FOR_RANGE = eINSTANCE.getForRange();

    /**
     * The meta object literal for the '<em><b>Id1</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FOR_RANGE__ID1 = eINSTANCE.getForRange_Id1();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOR_RANGE__EXPRESSION = eINSTANCE.getForRange_Expression();

    /**
     * The meta object literal for the '<em><b>Line Command</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOR_RANGE__LINE_COMMAND = eINSTANCE.getForRange_LineCommand();

    /**
     * The meta object literal for the '<em><b>Id2</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FOR_RANGE__ID2 = eINSTANCE.getForRange_Id2();

    /**
     * The meta object literal for the '{@link org.xtext.compiler.go.myGo.impl.ParametersDeclarationImpl <em>Parameters Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.compiler.go.myGo.impl.ParametersDeclarationImpl
     * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getParametersDeclaration()
     * @generated
     */
    EClass PARAMETERS_DECLARATION = eINSTANCE.getParametersDeclaration();

    /**
     * The meta object literal for the '<em><b>Id Type</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARAMETERS_DECLARATION__ID_TYPE = eINSTANCE.getParametersDeclaration_IdType();

    /**
     * The meta object literal for the '{@link org.xtext.compiler.go.myGo.impl.ParametersValuesImpl <em>Parameters Values</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.compiler.go.myGo.impl.ParametersValuesImpl
     * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getParametersValues()
     * @generated
     */
    EClass PARAMETERS_VALUES = eINSTANCE.getParametersValues();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARAMETERS_VALUES__EXPRESSION = eINSTANCE.getParametersValues_Expression();

    /**
     * The meta object literal for the '{@link org.xtext.compiler.go.myGo.impl.TypeDeclarationImpl <em>Type Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.compiler.go.myGo.impl.TypeDeclarationImpl
     * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getTypeDeclaration()
     * @generated
     */
    EClass TYPE_DECLARATION = eINSTANCE.getTypeDeclaration();

    /**
     * The meta object literal for the '<em><b>Id</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TYPE_DECLARATION__ID = eINSTANCE.getTypeDeclaration_Id();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TYPE_DECLARATION__TYPE = eINSTANCE.getTypeDeclaration_Type();

    /**
     * The meta object literal for the '{@link org.xtext.compiler.go.myGo.impl.ValueImpl <em>Value</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.compiler.go.myGo.impl.ValueImpl
     * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getValue()
     * @generated
     */
    EClass VALUE = eINSTANCE.getValue();

    /**
     * The meta object literal for the '<em><b>Int Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VALUE__INT_VALUE = eINSTANCE.getValue_IntValue();

    /**
     * The meta object literal for the '<em><b>Float Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VALUE__FLOAT_VALUE = eINSTANCE.getValue_FloatValue();

    /**
     * The meta object literal for the '<em><b>String Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VALUE__STRING_VALUE = eINSTANCE.getValue_StringValue();

    /**
     * The meta object literal for the '<em><b>Bool Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VALUE__BOOL_VALUE = eINSTANCE.getValue_BoolValue();

    /**
     * The meta object literal for the '{@link org.xtext.compiler.go.myGo.impl.IdTypeImpl <em>Id Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.compiler.go.myGo.impl.IdTypeImpl
     * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getIdType()
     * @generated
     */
    EClass ID_TYPE = eINSTANCE.getIdType();

    /**
     * The meta object literal for the '<em><b>Id</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ID_TYPE__ID = eINSTANCE.getIdType_Id();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ID_TYPE__TYPE = eINSTANCE.getIdType_Type();

    /**
     * The meta object literal for the '{@link org.xtext.compiler.go.myGo.impl.FuncCallImpl <em>Func Call</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.compiler.go.myGo.impl.FuncCallImpl
     * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getFuncCall()
     * @generated
     */
    EClass FUNC_CALL = eINSTANCE.getFuncCall();

    /**
     * The meta object literal for the '<em><b>Receiver Instance</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNC_CALL__RECEIVER_INSTANCE = eINSTANCE.getFuncCall_ReceiverInstance();

    /**
     * The meta object literal for the '<em><b>Id</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FUNC_CALL__ID = eINSTANCE.getFuncCall_Id();

    /**
     * The meta object literal for the '<em><b>Parameters Values</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNC_CALL__PARAMETERS_VALUES = eINSTANCE.getFuncCall_ParametersValues();

    /**
     * The meta object literal for the '{@link org.xtext.compiler.go.myGo.impl.ReceiverInstanceImpl <em>Receiver Instance</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.compiler.go.myGo.impl.ReceiverInstanceImpl
     * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getReceiverInstance()
     * @generated
     */
    EClass RECEIVER_INSTANCE = eINSTANCE.getReceiverInstance();

    /**
     * The meta object literal for the '<em><b>Id</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RECEIVER_INSTANCE__ID = eINSTANCE.getReceiverInstance_Id();

    /**
     * The meta object literal for the '{@link org.xtext.compiler.go.myGo.impl.ExpressionImpl <em>Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.compiler.go.myGo.impl.ExpressionImpl
     * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getExpression()
     * @generated
     */
    EClass EXPRESSION = eINSTANCE.getExpression();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__LEFT = eINSTANCE.getExpression_Left();

    /**
     * The meta object literal for the '<em><b>Binary Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPRESSION__BINARY_OP = eINSTANCE.getExpression_BinaryOp();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__RIGHT = eINSTANCE.getExpression_Right();

    /**
     * The meta object literal for the '{@link org.xtext.compiler.go.myGo.impl.ExplicitCastImpl <em>Explicit Cast</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.compiler.go.myGo.impl.ExplicitCastImpl
     * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getExplicitCast()
     * @generated
     */
    EClass EXPLICIT_CAST = eINSTANCE.getExplicitCast();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPLICIT_CAST__TYPE = eINSTANCE.getExplicitCast_Type();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPLICIT_CAST__EXPRESSION = eINSTANCE.getExplicitCast_Expression();

    /**
     * The meta object literal for the '{@link org.xtext.compiler.go.myGo.impl.VariableImpl <em>Variable</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.compiler.go.myGo.impl.VariableImpl
     * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getVariable()
     * @generated
     */
    EClass VARIABLE = eINSTANCE.getVariable();

    /**
     * The meta object literal for the '<em><b>Id</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARIABLE__ID = eINSTANCE.getVariable_Id();

    /**
     * The meta object literal for the '{@link org.xtext.compiler.go.myGo.impl.VariableDeclarationImpl <em>Variable Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.compiler.go.myGo.impl.VariableDeclarationImpl
     * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getVariableDeclaration()
     * @generated
     */
    EClass VARIABLE_DECLARATION = eINSTANCE.getVariableDeclaration();

    /**
     * The meta object literal for the '<em><b>Ids</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARIABLE_DECLARATION__IDS = eINSTANCE.getVariableDeclaration_Ids();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE_DECLARATION__EXPRESSION = eINSTANCE.getVariableDeclaration_Expression();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARIABLE_DECLARATION__TYPE = eINSTANCE.getVariableDeclaration_Type();

    /**
     * The meta object literal for the '{@link org.xtext.compiler.go.myGo.impl.ReturnStatementImpl <em>Return Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.compiler.go.myGo.impl.ReturnStatementImpl
     * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getReturnStatement()
     * @generated
     */
    EClass RETURN_STATEMENT = eINSTANCE.getReturnStatement();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RETURN_STATEMENT__EXPRESSION = eINSTANCE.getReturnStatement_Expression();

    /**
     * The meta object literal for the '{@link org.xtext.compiler.go.myGo.impl.Expression2Impl <em>Expression2</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.compiler.go.myGo.impl.Expression2Impl
     * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getExpression2()
     * @generated
     */
    EClass EXPRESSION2 = eINSTANCE.getExpression2();

    /**
     * The meta object literal for the '{@link org.xtext.compiler.go.myGo.impl.Expression3Impl <em>Expression3</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.compiler.go.myGo.impl.Expression3Impl
     * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getExpression3()
     * @generated
     */
    EClass EXPRESSION3 = eINSTANCE.getExpression3();

    /**
     * The meta object literal for the '{@link org.xtext.compiler.go.myGo.impl.Expression4Impl <em>Expression4</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.compiler.go.myGo.impl.Expression4Impl
     * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getExpression4()
     * @generated
     */
    EClass EXPRESSION4 = eINSTANCE.getExpression4();

    /**
     * The meta object literal for the '{@link org.xtext.compiler.go.myGo.impl.Expression5Impl <em>Expression5</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.compiler.go.myGo.impl.Expression5Impl
     * @see org.xtext.compiler.go.myGo.impl.MyGoPackageImpl#getExpression5()
     * @generated
     */
    EClass EXPRESSION5 = eINSTANCE.getExpression5();

  }

} //MyGoPackage
