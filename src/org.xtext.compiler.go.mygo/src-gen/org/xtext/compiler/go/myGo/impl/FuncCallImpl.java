/**
 * generated by Xtext 2.14.0
 */
package org.xtext.compiler.go.myGo.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.compiler.go.myGo.Expression;
import org.xtext.compiler.go.myGo.FuncCall;
import org.xtext.compiler.go.myGo.MyGoPackage;
import org.xtext.compiler.go.myGo.ParametersValues;
import org.xtext.compiler.go.myGo.ReceiverInstance;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Func Call</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link org.xtext.compiler.go.myGo.impl.FuncCallImpl#getLeft <em>Left</em>}</li>
 *   <li>{@link org.xtext.compiler.go.myGo.impl.FuncCallImpl#getBinaryOp <em>Binary Op</em>}</li>
 *   <li>{@link org.xtext.compiler.go.myGo.impl.FuncCallImpl#getRight <em>Right</em>}</li>
 *   <li>{@link org.xtext.compiler.go.myGo.impl.FuncCallImpl#getReceiverInstance <em>Receiver Instance</em>}</li>
 *   <li>{@link org.xtext.compiler.go.myGo.impl.FuncCallImpl#getId <em>Id</em>}</li>
 *   <li>{@link org.xtext.compiler.go.myGo.impl.FuncCallImpl#getParametersValues <em>Parameters Values</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class FuncCallImpl extends LineCommandImpl implements FuncCall
{
  /**
   * The cached value of the '{@link #getLeft() <em>Left</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLeft()
   * @generated
   * @ordered
   */
  protected Expression left;

  /**
   * The default value of the '{@link #getBinaryOp() <em>Binary Op</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBinaryOp()
   * @generated
   * @ordered
   */
  protected static final String BINARY_OP_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getBinaryOp() <em>Binary Op</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBinaryOp()
   * @generated
   * @ordered
   */
  protected String binaryOp = BINARY_OP_EDEFAULT;

  /**
   * The cached value of the '{@link #getRight() <em>Right</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRight()
   * @generated
   * @ordered
   */
  protected Expression right;

  /**
   * The cached value of the '{@link #getReceiverInstance() <em>Receiver Instance</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReceiverInstance()
   * @generated
   * @ordered
   */
  protected ReceiverInstance receiverInstance;

  /**
   * The default value of the '{@link #getId() <em>Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getId()
   * @generated
   * @ordered
   */
  protected static final String ID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getId() <em>Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getId()
   * @generated
   * @ordered
   */
  protected String id = ID_EDEFAULT;

  /**
   * The cached value of the '{@link #getParametersValues() <em>Parameters Values</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParametersValues()
   * @generated
   * @ordered
   */
  protected ParametersValues parametersValues;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FuncCallImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyGoPackage.Literals.FUNC_CALL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expression getLeft()
  {
    return left;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLeft(Expression newLeft, NotificationChain msgs)
  {
    Expression oldLeft = left;
    left = newLeft;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyGoPackage.FUNC_CALL__LEFT, oldLeft, newLeft);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLeft(Expression newLeft)
  {
    if (newLeft != left)
    {
      NotificationChain msgs = null;
      if (left != null)
        msgs = ((InternalEObject)left).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyGoPackage.FUNC_CALL__LEFT, null, msgs);
      if (newLeft != null)
        msgs = ((InternalEObject)newLeft).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyGoPackage.FUNC_CALL__LEFT, null, msgs);
      msgs = basicSetLeft(newLeft, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyGoPackage.FUNC_CALL__LEFT, newLeft, newLeft));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getBinaryOp()
  {
    return binaryOp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBinaryOp(String newBinaryOp)
  {
    String oldBinaryOp = binaryOp;
    binaryOp = newBinaryOp;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyGoPackage.FUNC_CALL__BINARY_OP, oldBinaryOp, binaryOp));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expression getRight()
  {
    return right;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRight(Expression newRight, NotificationChain msgs)
  {
    Expression oldRight = right;
    right = newRight;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyGoPackage.FUNC_CALL__RIGHT, oldRight, newRight);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRight(Expression newRight)
  {
    if (newRight != right)
    {
      NotificationChain msgs = null;
      if (right != null)
        msgs = ((InternalEObject)right).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyGoPackage.FUNC_CALL__RIGHT, null, msgs);
      if (newRight != null)
        msgs = ((InternalEObject)newRight).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyGoPackage.FUNC_CALL__RIGHT, null, msgs);
      msgs = basicSetRight(newRight, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyGoPackage.FUNC_CALL__RIGHT, newRight, newRight));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ReceiverInstance getReceiverInstance()
  {
    return receiverInstance;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetReceiverInstance(ReceiverInstance newReceiverInstance, NotificationChain msgs)
  {
    ReceiverInstance oldReceiverInstance = receiverInstance;
    receiverInstance = newReceiverInstance;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyGoPackage.FUNC_CALL__RECEIVER_INSTANCE, oldReceiverInstance, newReceiverInstance);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setReceiverInstance(ReceiverInstance newReceiverInstance)
  {
    if (newReceiverInstance != receiverInstance)
    {
      NotificationChain msgs = null;
      if (receiverInstance != null)
        msgs = ((InternalEObject)receiverInstance).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyGoPackage.FUNC_CALL__RECEIVER_INSTANCE, null, msgs);
      if (newReceiverInstance != null)
        msgs = ((InternalEObject)newReceiverInstance).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyGoPackage.FUNC_CALL__RECEIVER_INSTANCE, null, msgs);
      msgs = basicSetReceiverInstance(newReceiverInstance, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyGoPackage.FUNC_CALL__RECEIVER_INSTANCE, newReceiverInstance, newReceiverInstance));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getId()
  {
    return id;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setId(String newId)
  {
    String oldId = id;
    id = newId;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyGoPackage.FUNC_CALL__ID, oldId, id));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ParametersValues getParametersValues()
  {
    return parametersValues;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetParametersValues(ParametersValues newParametersValues, NotificationChain msgs)
  {
    ParametersValues oldParametersValues = parametersValues;
    parametersValues = newParametersValues;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyGoPackage.FUNC_CALL__PARAMETERS_VALUES, oldParametersValues, newParametersValues);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setParametersValues(ParametersValues newParametersValues)
  {
    if (newParametersValues != parametersValues)
    {
      NotificationChain msgs = null;
      if (parametersValues != null)
        msgs = ((InternalEObject)parametersValues).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyGoPackage.FUNC_CALL__PARAMETERS_VALUES, null, msgs);
      if (newParametersValues != null)
        msgs = ((InternalEObject)newParametersValues).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyGoPackage.FUNC_CALL__PARAMETERS_VALUES, null, msgs);
      msgs = basicSetParametersValues(newParametersValues, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyGoPackage.FUNC_CALL__PARAMETERS_VALUES, newParametersValues, newParametersValues));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyGoPackage.FUNC_CALL__LEFT:
        return basicSetLeft(null, msgs);
      case MyGoPackage.FUNC_CALL__RIGHT:
        return basicSetRight(null, msgs);
      case MyGoPackage.FUNC_CALL__RECEIVER_INSTANCE:
        return basicSetReceiverInstance(null, msgs);
      case MyGoPackage.FUNC_CALL__PARAMETERS_VALUES:
        return basicSetParametersValues(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyGoPackage.FUNC_CALL__LEFT:
        return getLeft();
      case MyGoPackage.FUNC_CALL__BINARY_OP:
        return getBinaryOp();
      case MyGoPackage.FUNC_CALL__RIGHT:
        return getRight();
      case MyGoPackage.FUNC_CALL__RECEIVER_INSTANCE:
        return getReceiverInstance();
      case MyGoPackage.FUNC_CALL__ID:
        return getId();
      case MyGoPackage.FUNC_CALL__PARAMETERS_VALUES:
        return getParametersValues();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyGoPackage.FUNC_CALL__LEFT:
        setLeft((Expression)newValue);
        return;
      case MyGoPackage.FUNC_CALL__BINARY_OP:
        setBinaryOp((String)newValue);
        return;
      case MyGoPackage.FUNC_CALL__RIGHT:
        setRight((Expression)newValue);
        return;
      case MyGoPackage.FUNC_CALL__RECEIVER_INSTANCE:
        setReceiverInstance((ReceiverInstance)newValue);
        return;
      case MyGoPackage.FUNC_CALL__ID:
        setId((String)newValue);
        return;
      case MyGoPackage.FUNC_CALL__PARAMETERS_VALUES:
        setParametersValues((ParametersValues)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyGoPackage.FUNC_CALL__LEFT:
        setLeft((Expression)null);
        return;
      case MyGoPackage.FUNC_CALL__BINARY_OP:
        setBinaryOp(BINARY_OP_EDEFAULT);
        return;
      case MyGoPackage.FUNC_CALL__RIGHT:
        setRight((Expression)null);
        return;
      case MyGoPackage.FUNC_CALL__RECEIVER_INSTANCE:
        setReceiverInstance((ReceiverInstance)null);
        return;
      case MyGoPackage.FUNC_CALL__ID:
        setId(ID_EDEFAULT);
        return;
      case MyGoPackage.FUNC_CALL__PARAMETERS_VALUES:
        setParametersValues((ParametersValues)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyGoPackage.FUNC_CALL__LEFT:
        return left != null;
      case MyGoPackage.FUNC_CALL__BINARY_OP:
        return BINARY_OP_EDEFAULT == null ? binaryOp != null : !BINARY_OP_EDEFAULT.equals(binaryOp);
      case MyGoPackage.FUNC_CALL__RIGHT:
        return right != null;
      case MyGoPackage.FUNC_CALL__RECEIVER_INSTANCE:
        return receiverInstance != null;
      case MyGoPackage.FUNC_CALL__ID:
        return ID_EDEFAULT == null ? id != null : !ID_EDEFAULT.equals(id);
      case MyGoPackage.FUNC_CALL__PARAMETERS_VALUES:
        return parametersValues != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eBaseStructuralFeatureID(int derivedFeatureID, Class<?> baseClass)
  {
    if (baseClass == Expression.class)
    {
      switch (derivedFeatureID)
      {
        case MyGoPackage.FUNC_CALL__LEFT: return MyGoPackage.EXPRESSION__LEFT;
        case MyGoPackage.FUNC_CALL__BINARY_OP: return MyGoPackage.EXPRESSION__BINARY_OP;
        case MyGoPackage.FUNC_CALL__RIGHT: return MyGoPackage.EXPRESSION__RIGHT;
        default: return -1;
      }
    }
    return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eDerivedStructuralFeatureID(int baseFeatureID, Class<?> baseClass)
  {
    if (baseClass == Expression.class)
    {
      switch (baseFeatureID)
      {
        case MyGoPackage.EXPRESSION__LEFT: return MyGoPackage.FUNC_CALL__LEFT;
        case MyGoPackage.EXPRESSION__BINARY_OP: return MyGoPackage.FUNC_CALL__BINARY_OP;
        case MyGoPackage.EXPRESSION__RIGHT: return MyGoPackage.FUNC_CALL__RIGHT;
        default: return -1;
      }
    }
    return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (binaryOp: ");
    result.append(binaryOp);
    result.append(", id: ");
    result.append(id);
    result.append(')');
    return result.toString();
  }

} //FuncCallImpl
